{
    "version": 3,
    "terraform_version": "0.11.3",
    "serial": 59,
    "lineage": "a243468d-0273-4b51-9272-7f166ba9208e",
    "modules": [
        {
            "path": [
                "root"
            ],
            "outputs": {
                "alb_dns_name": {
                    "sensitive": false,
                    "type": "string",
                    "value": "production-alb-polyledger-659366779.us-east-1.elb.amazonaws.com"
                },
                "configuration": {
                    "sensitive": false,
                    "type": "string",
                    "value": "Add your private key and SSH into any private node via the Bastion host:\nssh-add ../../../modules/keys/demo.pem\n"
                }
            },
            "resources": {
                "aws_key_pair.key": {
                    "type": "aws_key_pair",
                    "depends_on": [],
                    "primary": {
                        "id": "production_key",
                        "attributes": {
                            "id": "production_key",
                            "key_name": "production_key",
                            "public_key": "ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQCxxdVPu/lWt4vuD+tolTw/T7sFgMr8iEQ2Cn0ojLZGKLpQu6a7PmkQ22M5Ka/GhUCuI6SNYCDUjZnjl6PvEnHDfJmMtnRI7HJkPXxkdqu3zc88BS7apPm+Ysps7EjQI83JnNI0LsqCVhjCZlamvA+bSnRCkzc4we9p2OeTX+X9gFAw3VfNbBynPNG2tsiOHmvm+iSSUM1Q1q61BD+awLIVNc6Rsc0ULktonFvmJVPNJVfRj8UYQPqAlqeuS2CcmJZnQZWqTA0+Lnlwt3O3zxWYUMCmCdHYL6k8HUI44ZWAMH/Rz8nqvm6KAPz47SMsWyXXfBihBTLcZoKpZ2Sakmbt mpigassou@zendesk.com"
                        },
                        "meta": {
                            "schema_version": "1"
                        },
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.aws"
                },
                "aws_route53_delegation_set.main": {
                    "type": "aws_route53_delegation_set",
                    "depends_on": [],
                    "primary": {
                        "id": "N2Q3SIZ781JHJB",
                        "attributes": {
                            "id": "N2Q3SIZ781JHJB",
                            "name_servers.#": "4",
                            "name_servers.0": "ns-1184.awsdns-20.org",
                            "name_servers.1": "ns-1638.awsdns-12.co.uk",
                            "name_servers.2": "ns-444.awsdns-55.com",
                            "name_servers.3": "ns-565.awsdns-06.net",
                            "reference_name": "DynDNS"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.aws"
                },
                "aws_route53_record.www-prod": {
                    "type": "aws_route53_record",
                    "depends_on": [
                        "aws_route53_zone.primary_route",
                        "module.ecs"
                    ],
                    "primary": {
                        "id": "Z1947MHTK4V8DM_www.polyledger-staging.com_A",
                        "attributes": {
                            "alias.#": "1",
                            "alias.3955877908.evaluate_target_health": "true",
                            "alias.3955877908.name": "production-alb-polyledger-659366779.us-east-1.elb.amazonaws.com",
                            "alias.3955877908.zone_id": "Z35SXDOTRQ7X7K",
                            "allow_overwrite": "true",
                            "fqdn": "www.polyledger-staging.com",
                            "id": "Z1947MHTK4V8DM_www.polyledger-staging.com_A",
                            "name": "www.polyledger-staging.com",
                            "type": "A",
                            "zone_id": "Z1947MHTK4V8DM"
                        },
                        "meta": {
                            "schema_version": "2"
                        },
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.aws"
                },
                "aws_route53_zone.primary_route": {
                    "type": "aws_route53_zone",
                    "depends_on": [
                        "aws_route53_delegation_set.main"
                    ],
                    "primary": {
                        "id": "Z1947MHTK4V8DM",
                        "attributes": {
                            "comment": "Managed by Terraform",
                            "delegation_set_id": "N2Q3SIZ781JHJB",
                            "force_destroy": "false",
                            "id": "Z1947MHTK4V8DM",
                            "name": "polyledger-staging.com",
                            "name_servers.#": "4",
                            "name_servers.0": "ns-1184.awsdns-20.org",
                            "name_servers.1": "ns-1638.awsdns-12.co.uk",
                            "name_servers.2": "ns-444.awsdns-55.com",
                            "name_servers.3": "ns-565.awsdns-06.net",
                            "tags.%": "0",
                            "zone_id": "Z1947MHTK4V8DM"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.aws"
                }
            },
            "depends_on": []
        },
        {
            "path": [
                "root",
                "code_pipeline"
            ],
            "outputs": {},
            "resources": {
                "aws_codebuild_project.polyledger_build_client": {
                    "type": "aws_codebuild_project",
                    "depends_on": [
                        "aws_iam_role.codebuild_role",
                        "data.template_file.buildspec_client"
                    ],
                    "primary": {
                        "id": "arn:aws:codebuild:us-east-1:951653432607:project/polyledger-codebuild-client",
                        "attributes": {
                            "artifacts.#": "1",
                            "artifacts.2731293239.location": "",
                            "artifacts.2731293239.name": "polyledger-codebuild-client",
                            "artifacts.2731293239.namespace_type": "",
                            "artifacts.2731293239.packaging": "NONE",
                            "artifacts.2731293239.path": "",
                            "artifacts.2731293239.type": "CODEPIPELINE",
                            "build_timeout": "20",
                            "cache.#": "1",
                            "cache.0.location": "",
                            "cache.0.type": "NO_CACHE",
                            "description": "",
                            "encryption_key": "arn:aws:kms:us-east-1:951653432607:alias/aws/s3",
                            "environment.#": "1",
                            "environment.487013829.compute_type": "BUILD_GENERAL1_SMALL",
                            "environment.487013829.environment_variable.#": "0",
                            "environment.487013829.image": "aws/codebuild/nodejs:8.11.0",
                            "environment.487013829.privileged_mode": "true",
                            "environment.487013829.type": "LINUX_CONTAINER",
                            "id": "arn:aws:codebuild:us-east-1:951653432607:project/polyledger-codebuild-client",
                            "name": "polyledger-codebuild-client",
                            "service_role": "arn:aws:iam::951653432607:role/codebuild-role",
                            "source.#": "1",
                            "source.578584117.auth.#": "0",
                            "source.578584117.buildspec": "version: 0.2\n\nphases:\n  pre_build:\n    commands:\n      - pip install awscli --upgrade --user\n      - echo `aws --version`\n      - echo Logging in to Amazon ECR...\n      - $(aws ecr get-login --region us-east-1 --no-include-email)\n      - REPOSITORY_URI=951653432607.dkr.ecr.us-east-1.amazonaws.com/polyledger/production\n      - IMAGE_TAG=$(echo $CODEBUILD_RESOLVED_SOURCE_VERSION | cut -c 1-7)\n      - ASSETS_BUCKET_NAME=polyledger-codepipeline-client-assets\n      - NPM_TOKEN=6047c597-157d-4a45-b2bb-a76bc4405c95\n      - docker pull $REPOSITORY_URI:latest || true\n      - echo Entered the pre_build phase...\n  build:\n    commands:\n      - echo Build started on `date`\n      - echo Running npm run build\n      - cd web_client\n      # We'll need this when we build the assets in the last steps\n      - npm install \u0026\u0026 npm run build\n      - echo Building the Docker image...\n      - docker build --cache-from $REPOSITORY_URI:latest -t $REPOSITORY_URI:latest . --build-arg NPM_TOKEN=$NPM_TOKEN\n      - docker tag $REPOSITORY_URI:latest $REPOSITORY_URI:$IMAGE_TAG\n  post_build:\n    commands:\n      - echo Build completed on `date`\n      - echo Pushing the Docker images...\n      - docker push $REPOSITORY_URI:latest\n      - docker push $REPOSITORY_URI:$IMAGE_TAG\n      - echo Writing image definitions file to $CODEBUILD_SRC_DIR...\n      - printf '[{\"name\":\"frontend\",\"imageUri\":\"%s\"}]' $REPOSITORY_URI:$IMAGE_TAG \u003e $CODEBUILD_SRC_DIR/client-imagedefinitions.json\n      # Sends assets to S3\n      - aws s3 sync --delete --exclude static/* build/ \"s3://$ASSETS_BUCKET_NAME\"\n      - aws s3 sync --delete --cache-control \"max-age=31536000\" build/static \"s3://$ASSETS_BUCKET_NAME/static\"\n      # For DB migration?\n      #- aws ecs run-task --launch-type FARGATE --cluster production-ecs-cluster --task-definition production_db_migrate --network-configuration \"awsvpcConfiguration={subnets=[subnet-2c9e594b],securityGroups=[sg-f6b872be,sg-34bc767c]}\"\nartifacts:\n  discard-paths: yes\n  files:\n    - client-imagedefinitions.json\ncache:\n  paths:\n    - '/root/.cache/pip/**/*'\n",
                            "source.578584117.location": "",
                            "source.578584117.type": "CODEPIPELINE",
                            "tags.%": "0",
                            "vpc_config.#": "0"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.aws"
                },
                "aws_codebuild_project.polyledger_build_server": {
                    "type": "aws_codebuild_project",
                    "depends_on": [
                        "aws_iam_role.codebuild_role",
                        "data.template_file.buildspec_server"
                    ],
                    "primary": {
                        "id": "arn:aws:codebuild:us-east-1:951653432607:project/polyledger-codebuild-server",
                        "attributes": {
                            "artifacts.#": "1",
                            "artifacts.2731293239.location": "",
                            "artifacts.2731293239.name": "polyledger-codebuild-server",
                            "artifacts.2731293239.namespace_type": "",
                            "artifacts.2731293239.packaging": "NONE",
                            "artifacts.2731293239.path": "",
                            "artifacts.2731293239.type": "CODEPIPELINE",
                            "build_timeout": "10",
                            "cache.#": "1",
                            "cache.0.location": "",
                            "cache.0.type": "NO_CACHE",
                            "description": "",
                            "encryption_key": "arn:aws:kms:us-east-1:951653432607:alias/aws/s3",
                            "environment.#": "1",
                            "environment.364137728.compute_type": "BUILD_GENERAL1_SMALL",
                            "environment.364137728.environment_variable.#": "0",
                            "environment.364137728.image": "aws/codebuild/ubuntu-base:14.04",
                            "environment.364137728.privileged_mode": "true",
                            "environment.364137728.type": "LINUX_CONTAINER",
                            "id": "arn:aws:codebuild:us-east-1:951653432607:project/polyledger-codebuild-server",
                            "name": "polyledger-codebuild-server",
                            "service_role": "arn:aws:iam::951653432607:role/codebuild-role",
                            "source.#": "1",
                            "source.471741428.auth.#": "0",
                            "source.471741428.buildspec": "version: 0.2\n\nphases:\n  pre_build:\n    commands:\n      - pip install awscli --upgrade --user\n      - echo `aws --version`\n      - echo Logging in to Amazon ECR...\n      - $(aws ecr get-login --region us-east-1 --no-include-email)\n      - REPOSITORY_URI=951653432607.dkr.ecr.us-east-1.amazonaws.com/polyledger/production\n      - IMAGE_TAG=$(echo $CODEBUILD_RESOLVED_SOURCE_VERSION | cut -c 1-7)\n      - docker pull $REPOSITORY_URI:latest || true\n      - echo Entered the pre_build phase...\n  build:\n    commands:\n      - echo Build started on `date`\n      - cd server\n      - echo Building the Docker image...\n      - docker build --cache-from $REPOSITORY_URI:latest -t $REPOSITORY_URI:latest .\n      - docker tag $REPOSITORY_URI:latest $REPOSITORY_URI:$IMAGE_TAG\n  post_build:\n    commands:\n      - echo Build completed on `date`\n      - echo Pushing the Docker images...\n      - docker push $REPOSITORY_URI:latest\n      - docker push $REPOSITORY_URI:$IMAGE_TAG\n      - echo Writing image definitions file to $CODEBUILD_SRC_DIR...\n      - printf '[{\"name\":\"server\",\"imageUri\":\"%s\"}]' $REPOSITORY_URI:$IMAGE_TAG \u003e $CODEBUILD_SRC_DIR/server-imagedefinitions.json\nartifacts:\n  discard-paths: yes\n  files:\n    - server-imagedefinitions.json\ncache:\n  paths:\n    - '/root/.cache/pip/**/*'\n",
                            "source.471741428.location": "",
                            "source.471741428.type": "CODEPIPELINE",
                            "tags.%": "0",
                            "vpc_config.#": "0"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.aws"
                },
                "aws_codepipeline.pipeline": {
                    "type": "aws_codepipeline",
                    "depends_on": [
                        "aws_iam_role.codepipeline_role",
                        "aws_s3_bucket.source_artefacts"
                    ],
                    "primary": {
                        "id": "polyledger-pipeline",
                        "attributes": {
                            "arn": "arn:aws:codepipeline:us-east-1:951653432607:polyledger-pipeline",
                            "artifact_store.#": "1",
                            "artifact_store.0.encryption_key.#": "0",
                            "artifact_store.0.location": "polyledger-codepipeline-source-artefacts",
                            "artifact_store.0.type": "S3",
                            "id": "polyledger-pipeline",
                            "name": "polyledger-pipeline",
                            "role_arn": "arn:aws:iam::951653432607:role/codepipeline-role",
                            "stage.#": "2",
                            "stage.0.action.#": "1",
                            "stage.0.action.0.category": "Source",
                            "stage.0.action.0.configuration.%": "3",
                            "stage.0.action.0.configuration.Branch": "mpigassou/michel/ecs",
                            "stage.0.action.0.configuration.Owner": "polyledger",
                            "stage.0.action.0.configuration.Repo": "polyledger",
                            "stage.0.action.0.input_artifacts.#": "0",
                            "stage.0.action.0.name": "Source",
                            "stage.0.action.0.output_artifacts.#": "1",
                            "stage.0.action.0.output_artifacts.0": "source",
                            "stage.0.action.0.owner": "ThirdParty",
                            "stage.0.action.0.provider": "GitHub",
                            "stage.0.action.0.role_arn": "",
                            "stage.0.action.0.run_order": "1",
                            "stage.0.action.0.version": "1",
                            "stage.0.name": "Source",
                            "stage.1.action.#": "2",
                            "stage.1.action.0.category": "Build",
                            "stage.1.action.0.configuration.%": "1",
                            "stage.1.action.0.configuration.ProjectName": "polyledger-codebuild-client",
                            "stage.1.action.0.input_artifacts.#": "1",
                            "stage.1.action.0.input_artifacts.0": "source",
                            "stage.1.action.0.name": "Build-Client",
                            "stage.1.action.0.output_artifacts.#": "1",
                            "stage.1.action.0.output_artifacts.0": "client-imagedefinitions",
                            "stage.1.action.0.owner": "AWS",
                            "stage.1.action.0.provider": "CodeBuild",
                            "stage.1.action.0.role_arn": "",
                            "stage.1.action.0.run_order": "1",
                            "stage.1.action.0.version": "1",
                            "stage.1.action.1.category": "Build",
                            "stage.1.action.1.configuration.%": "1",
                            "stage.1.action.1.configuration.ProjectName": "polyledger-codebuild-server",
                            "stage.1.action.1.input_artifacts.#": "1",
                            "stage.1.action.1.input_artifacts.0": "source",
                            "stage.1.action.1.name": "Build-Server",
                            "stage.1.action.1.output_artifacts.#": "1",
                            "stage.1.action.1.output_artifacts.0": "server-imagedefinitions",
                            "stage.1.action.1.owner": "AWS",
                            "stage.1.action.1.provider": "CodeBuild",
                            "stage.1.action.1.role_arn": "",
                            "stage.1.action.1.run_order": "1",
                            "stage.1.action.1.version": "1",
                            "stage.1.name": "Build"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.aws"
                },
                "aws_iam_role.codebuild_role": {
                    "type": "aws_iam_role",
                    "depends_on": [],
                    "primary": {
                        "id": "codebuild-role",
                        "attributes": {
                            "arn": "arn:aws:iam::951653432607:role/codebuild-role",
                            "assume_role_policy": "{\"Version\":\"2012-10-17\",\"Statement\":[{\"Effect\":\"Allow\",\"Principal\":{\"Service\":\"codebuild.amazonaws.com\"},\"Action\":\"sts:AssumeRole\"}]}",
                            "create_date": "2018-05-11T01:29:00Z",
                            "force_detach_policies": "false",
                            "id": "codebuild-role",
                            "max_session_duration": "3600",
                            "name": "codebuild-role",
                            "path": "/",
                            "unique_id": "AROAIBQQCDCQZRFVNN4LQ"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.aws"
                },
                "aws_iam_role.codepipeline_role": {
                    "type": "aws_iam_role",
                    "depends_on": [],
                    "primary": {
                        "id": "codepipeline-role",
                        "attributes": {
                            "arn": "arn:aws:iam::951653432607:role/codepipeline-role",
                            "assume_role_policy": "{\"Version\":\"2012-10-17\",\"Statement\":[{\"Effect\":\"Allow\",\"Principal\":{\"Service\":\"codepipeline.amazonaws.com\"},\"Action\":\"sts:AssumeRole\"}]}",
                            "create_date": "2018-05-11T01:29:00Z",
                            "force_detach_policies": "false",
                            "id": "codepipeline-role",
                            "max_session_duration": "3600",
                            "name": "codepipeline-role",
                            "path": "/",
                            "unique_id": "AROAI4MGQ3OYOHHAKYPLM"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.aws"
                },
                "aws_iam_role_policy.codebuild_policy": {
                    "type": "aws_iam_role_policy",
                    "depends_on": [
                        "aws_iam_role.codebuild_role",
                        "data.template_file.codebuild_policy"
                    ],
                    "primary": {
                        "id": "codebuild-role:codebuild-policy",
                        "attributes": {
                            "id": "codebuild-role:codebuild-policy",
                            "name": "codebuild-policy",
                            "policy": "{\n  \"Version\": \"2012-10-17\",\n  \"Statement\": [\n    {\n      \"Effect\": \"Allow\",\n      \"Resource\": [\n        \"*\"\n      ],\n      \"Action\": [\n        \"logs:CreateLogGroup\",\n        \"logs:CreateLogStream\",\n        \"logs:PutLogEvents\",\n        \"ecr:GetAuthorizationToken\",\n        \"ecr:InitiateLayerUpload\",\n        \"ecr:UploadLayerPart\",\n        \"ecr:CompleteLayerUpload\",\n        \"ecr:BatchCheckLayerAvailability\",\n        \"ecr:PutImage\",\n        \"ecs:RunTask\",\n        \"iam:PassRole\"\n      ]\n    },\n    {\n      \"Effect\":\"Allow\",\n      \"Action\": [\n        \"s3:DeleteObject\",\n        \"s3:GetObject\",\n        \"s3:GetObjectVersion\",\n        \"s3:GetBucketVersioning\",\n        \"s3:List*\",\n        \"s3:PutObject\"\n      ],\n      \"Resource\": [\n        \"arn:aws:s3:::polyledger-codepipeline-source-artefacts\",\n        \"arn:aws:s3:::polyledger-codepipeline-source-artefacts/*\",\n        \"arn:aws:s3:::polyledger-codepipeline-client-assets\",\n        \"arn:aws:s3:::polyledger-codepipeline-client-assets/*\"\n      ]\n    }\n  ]\n}\n",
                            "role": "codebuild-role"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.aws"
                },
                "aws_iam_role_policy.codepipeline_policy": {
                    "type": "aws_iam_role_policy",
                    "depends_on": [
                        "aws_iam_role.codepipeline_role",
                        "data.template_file.codepipeline_policy"
                    ],
                    "primary": {
                        "id": "codepipeline-role:codepipeline_policy",
                        "attributes": {
                            "id": "codepipeline-role:codepipeline_policy",
                            "name": "codepipeline_policy",
                            "policy": "{\n  \"Version\": \"2012-10-17\",\n  \"Statement\": [\n    {\n      \"Effect\":\"Allow\",\n      \"Action\": [\n        \"s3:GetObject\",\n        \"s3:GetObjectVersion\",\n        \"s3:GetBucketVersioning\",\n        \"s3:List*\",\n        \"s3:PutObject\"\n      ],\n      \"Resource\": [\n        \"arn:aws:s3:::polyledger-codepipeline-source-artefacts\",\n        \"arn:aws:s3:::polyledger-codepipeline-source-artefacts/*\",\n        \"arn:aws:s3:::polyledger-codepipeline-client-assets\",\n        \"arn:aws:s3:::polyledger-codepipeline-client-assets/*\"\n      ]\n    },\n    {\n      \"Effect\": \"Allow\",\n      \"Action\": [\n        \"codebuild:BatchGetBuilds\",\n        \"codebuild:StartBuild\"\n      ],\n      \"Resource\": \"*\"\n    },\n    {\n      \"Action\": [\n        \"ecs:*\",\n        \"events:DescribeRule\",\n        \"events:DeleteRule\",\n        \"events:ListRuleNamesByTarget\",\n        \"events:ListTargetsByRule\",\n        \"events:PutRule\",\n        \"events:PutTargets\",\n        \"events:RemoveTargets\",\n        \"iam:ListAttachedRolePolicies\",\n        \"iam:ListInstanceProfiles\",\n        \"iam:ListRoles\",\n        \"logs:CreateLogGroup\",\n        \"logs:DescribeLogGroups\",\n        \"logs:FilterLogEvents\"\n      ],\n      \"Resource\": \"*\",\n      \"Effect\": \"Allow\"\n    },\n    {\n      \"Action\": \"iam:PassRole\",\n      \"Effect\": \"Allow\",\n      \"Resource\": [\n        \"*\"\n      ],\n      \"Condition\": {\n        \"StringLike\": {\n          \"iam:PassedToService\": \"ecs-tasks.amazonaws.com\"\n        }\n      }\n    },\n    {\n      \"Action\": \"iam:PassRole\",\n      \"Effect\": \"Allow\",\n      \"Resource\": [\n        \"arn:aws:iam::*:role/ecsInstanceRole*\"\n      ],\n      \"Condition\": {\n        \"StringLike\": {\n          \"iam:PassedToService\": [\n            \"ec2.amazonaws.com\",\n            \"ec2.amazonaws.com.cn\"\n          ]\n        }\n      }\n    },\n    {\n      \"Action\": \"iam:PassRole\",\n      \"Effect\": \"Allow\",\n      \"Resource\": [\n        \"arn:aws:iam::*:role/ecsAutoscaleRole*\"\n      ],\n      \"Condition\": {\n        \"StringLike\": {\n          \"iam:PassedToService\": [\n            \"application-autoscaling.amazonaws.com\",\n            \"application-autoscaling.amazonaws.com.cn\"\n          ]\n        }\n      }\n    },\n    {\n      \"Effect\": \"Allow\",\n      \"Action\": \"iam:CreateServiceLinkedRole\",\n      \"Resource\": \"*\",\n      \"Condition\": {\n        \"StringLike\": {\n          \"iam:AWSServiceName\": [\n            \"ecs.amazonaws.com\",\n            \"spot.amazonaws.com\",\n            \"spotfleet.amazonaws.com\"\n          ]\n        }\n      }\n    }\n  ]\n}\n",
                            "role": "codepipeline-role"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.aws"
                },
                "aws_s3_bucket.client_assets": {
                    "type": "aws_s3_bucket",
                    "depends_on": [],
                    "primary": {
                        "id": "polyledger-codepipeline-client-assets",
                        "attributes": {
                            "acceleration_status": "",
                            "acl": "public-read",
                            "arn": "arn:aws:s3:::polyledger-codepipeline-client-assets",
                            "bucket": "polyledger-codepipeline-client-assets",
                            "bucket_domain_name": "polyledger-codepipeline-client-assets.s3.amazonaws.com",
                            "force_destroy": "true",
                            "hosted_zone_id": "Z3AQBSTGFYJSTF",
                            "id": "polyledger-codepipeline-client-assets",
                            "logging.#": "0",
                            "region": "us-east-1",
                            "replication_configuration.#": "0",
                            "request_payer": "BucketOwner",
                            "server_side_encryption_configuration.#": "0",
                            "tags.%": "0",
                            "versioning.#": "1",
                            "versioning.0.enabled": "false",
                            "versioning.0.mfa_delete": "false",
                            "website.#": "1",
                            "website.0.error_document": "",
                            "website.0.index_document": "index.html",
                            "website.0.redirect_all_requests_to": "",
                            "website.0.routing_rules": "",
                            "website_domain": "s3-website-us-east-1.amazonaws.com",
                            "website_endpoint": "polyledger-codepipeline-client-assets.s3-website-us-east-1.amazonaws.com"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.aws"
                },
                "aws_s3_bucket.source_artefacts": {
                    "type": "aws_s3_bucket",
                    "depends_on": [],
                    "primary": {
                        "id": "polyledger-codepipeline-source-artefacts",
                        "attributes": {
                            "acceleration_status": "",
                            "acl": "private",
                            "arn": "arn:aws:s3:::polyledger-codepipeline-source-artefacts",
                            "bucket": "polyledger-codepipeline-source-artefacts",
                            "bucket_domain_name": "polyledger-codepipeline-source-artefacts.s3.amazonaws.com",
                            "force_destroy": "true",
                            "hosted_zone_id": "Z3AQBSTGFYJSTF",
                            "id": "polyledger-codepipeline-source-artefacts",
                            "logging.#": "0",
                            "region": "us-east-1",
                            "replication_configuration.#": "0",
                            "request_payer": "BucketOwner",
                            "server_side_encryption_configuration.#": "0",
                            "tags.%": "0",
                            "versioning.#": "1",
                            "versioning.0.enabled": "false",
                            "versioning.0.mfa_delete": "false",
                            "website.#": "0"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.aws"
                },
                "data.template_file.buildspec_client": {
                    "type": "template_file",
                    "depends_on": [
                        "aws_s3_bucket.client_assets"
                    ],
                    "primary": {
                        "id": "b982dc4acf069958ea8f29eb24fb79476e25cbdc36108598e5f88db2ceb4ca95",
                        "attributes": {
                            "id": "b982dc4acf069958ea8f29eb24fb79476e25cbdc36108598e5f88db2ceb4ca95",
                            "rendered": "version: 0.2\n\nphases:\n  pre_build:\n    commands:\n      - pip install awscli --upgrade --user\n      - echo `aws --version`\n      - echo Logging in to Amazon ECR...\n      - $(aws ecr get-login --region us-east-1 --no-include-email)\n      - REPOSITORY_URI=951653432607.dkr.ecr.us-east-1.amazonaws.com/polyledger/production\n      - IMAGE_TAG=$(echo $CODEBUILD_RESOLVED_SOURCE_VERSION | cut -c 1-7)\n      - ASSETS_BUCKET_NAME=polyledger-codepipeline-client-assets\n      - NPM_TOKEN=6047c597-157d-4a45-b2bb-a76bc4405c95\n      - docker pull $REPOSITORY_URI:latest || true\n      - echo Entered the pre_build phase...\n  build:\n    commands:\n      - echo Build started on `date`\n      - echo Running npm run build\n      - cd web_client\n      # We'll need this when we build the assets in the last steps\n      - npm install \u0026\u0026 npm run build\n      - echo Building the Docker image...\n      - docker build --cache-from $REPOSITORY_URI:latest -t $REPOSITORY_URI:latest . --build-arg NPM_TOKEN=$NPM_TOKEN\n      - docker tag $REPOSITORY_URI:latest $REPOSITORY_URI:$IMAGE_TAG\n  post_build:\n    commands:\n      - echo Build completed on `date`\n      - echo Pushing the Docker images...\n      - docker push $REPOSITORY_URI:latest\n      - docker push $REPOSITORY_URI:$IMAGE_TAG\n      - echo Writing image definitions file to $CODEBUILD_SRC_DIR...\n      - printf '[{\"name\":\"frontend\",\"imageUri\":\"%s\"}]' $REPOSITORY_URI:$IMAGE_TAG \u003e $CODEBUILD_SRC_DIR/client-imagedefinitions.json\n      # Sends assets to S3\n      - aws s3 sync --delete --exclude static/* build/ \"s3://$ASSETS_BUCKET_NAME\"\n      - aws s3 sync --delete --cache-control \"max-age=31536000\" build/static \"s3://$ASSETS_BUCKET_NAME/static\"\n      # For DB migration?\n      #- aws ecs run-task --launch-type FARGATE --cluster production-ecs-cluster --task-definition production_db_migrate --network-configuration \"awsvpcConfiguration={subnets=[subnet-2c9e594b],securityGroups=[sg-f6b872be,sg-34bc767c]}\"\nartifacts:\n  discard-paths: yes\n  files:\n    - client-imagedefinitions.json\ncache:\n  paths:\n    - '/root/.cache/pip/**/*'\n",
                            "template": "version: 0.2\n\nphases:\n  pre_build:\n    commands:\n      - pip install awscli --upgrade --user\n      - echo `aws --version`\n      - echo Logging in to Amazon ECR...\n      - $(aws ecr get-login --region ${region} --no-include-email)\n      - REPOSITORY_URI=${repository_url}\n      - IMAGE_TAG=$(echo $CODEBUILD_RESOLVED_SOURCE_VERSION | cut -c 1-7)\n      - ASSETS_BUCKET_NAME=${assets_bucket_name}\n      - NPM_TOKEN=${npm_token}\n      - docker pull $REPOSITORY_URI:latest || true\n      - echo Entered the pre_build phase...\n  build:\n    commands:\n      - echo Build started on `date`\n      - echo Running npm run build\n      - cd web_client\n      # We'll need this when we build the assets in the last steps\n      - npm install \u0026\u0026 npm run build\n      - echo Building the Docker image...\n      - docker build --cache-from $REPOSITORY_URI:latest -t $REPOSITORY_URI:latest . --build-arg NPM_TOKEN=$NPM_TOKEN\n      - docker tag $REPOSITORY_URI:latest $REPOSITORY_URI:$IMAGE_TAG\n  post_build:\n    commands:\n      - echo Build completed on `date`\n      - echo Pushing the Docker images...\n      - docker push $REPOSITORY_URI:latest\n      - docker push $REPOSITORY_URI:$IMAGE_TAG\n      - echo Writing image definitions file to $CODEBUILD_SRC_DIR...\n      - printf '[{\"name\":\"frontend\",\"imageUri\":\"%s\"}]' $REPOSITORY_URI:$IMAGE_TAG \u003e $CODEBUILD_SRC_DIR/client-imagedefinitions.json\n      # Sends assets to S3\n      - aws s3 sync --delete --exclude static/* build/ \"s3://$ASSETS_BUCKET_NAME\"\n      - aws s3 sync --delete --cache-control \"max-age=31536000\" build/static \"s3://$ASSETS_BUCKET_NAME/static\"\n      # For DB migration?\n      #- aws ecs run-task --launch-type FARGATE --cluster ${cluster_name} --task-definition production_db_migrate --network-configuration \"awsvpcConfiguration={subnets=[${subnet_id}],securityGroups=[${security_group_ids}]}\"\nartifacts:\n  discard-paths: yes\n  files:\n    - client-imagedefinitions.json\ncache:\n  paths:\n    - '/root/.cache/pip/**/*'\n",
                            "vars.%": "7",
                            "vars.assets_bucket_name": "polyledger-codepipeline-client-assets",
                            "vars.cluster_name": "production-ecs-cluster",
                            "vars.npm_token": "6047c597-157d-4a45-b2bb-a76bc4405c95",
                            "vars.region": "us-east-1",
                            "vars.repository_url": "951653432607.dkr.ecr.us-east-1.amazonaws.com/polyledger/production",
                            "vars.security_group_ids": "sg-f6b872be,sg-34bc767c",
                            "vars.subnet_id": "subnet-2c9e594b"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.template"
                },
                "data.template_file.buildspec_server": {
                    "type": "template_file",
                    "depends_on": [],
                    "primary": {
                        "id": "26460123e201893c6de9e8f4ed7b2386dd8ba32af153638d29287b04a0b920cf",
                        "attributes": {
                            "id": "26460123e201893c6de9e8f4ed7b2386dd8ba32af153638d29287b04a0b920cf",
                            "rendered": "version: 0.2\n\nphases:\n  pre_build:\n    commands:\n      - pip install awscli --upgrade --user\n      - echo `aws --version`\n      - echo Logging in to Amazon ECR...\n      - $(aws ecr get-login --region us-east-1 --no-include-email)\n      - REPOSITORY_URI=951653432607.dkr.ecr.us-east-1.amazonaws.com/polyledger/production\n      - IMAGE_TAG=$(echo $CODEBUILD_RESOLVED_SOURCE_VERSION | cut -c 1-7)\n      - docker pull $REPOSITORY_URI:latest || true\n      - echo Entered the pre_build phase...\n  build:\n    commands:\n      - echo Build started on `date`\n      - cd server\n      - echo Building the Docker image...\n      - docker build --cache-from $REPOSITORY_URI:latest -t $REPOSITORY_URI:latest .\n      - docker tag $REPOSITORY_URI:latest $REPOSITORY_URI:$IMAGE_TAG\n  post_build:\n    commands:\n      - echo Build completed on `date`\n      - echo Pushing the Docker images...\n      - docker push $REPOSITORY_URI:latest\n      - docker push $REPOSITORY_URI:$IMAGE_TAG\n      - echo Writing image definitions file to $CODEBUILD_SRC_DIR...\n      - printf '[{\"name\":\"server\",\"imageUri\":\"%s\"}]' $REPOSITORY_URI:$IMAGE_TAG \u003e $CODEBUILD_SRC_DIR/server-imagedefinitions.json\nartifacts:\n  discard-paths: yes\n  files:\n    - server-imagedefinitions.json\ncache:\n  paths:\n    - '/root/.cache/pip/**/*'\n",
                            "template": "version: 0.2\n\nphases:\n  pre_build:\n    commands:\n      - pip install awscli --upgrade --user\n      - echo `aws --version`\n      - echo Logging in to Amazon ECR...\n      - $(aws ecr get-login --region ${region} --no-include-email)\n      - REPOSITORY_URI=${repository_url}\n      - IMAGE_TAG=$(echo $CODEBUILD_RESOLVED_SOURCE_VERSION | cut -c 1-7)\n      - docker pull $REPOSITORY_URI:latest || true\n      - echo Entered the pre_build phase...\n  build:\n    commands:\n      - echo Build started on `date`\n      - cd server\n      - echo Building the Docker image...\n      - docker build --cache-from $REPOSITORY_URI:latest -t $REPOSITORY_URI:latest .\n      - docker tag $REPOSITORY_URI:latest $REPOSITORY_URI:$IMAGE_TAG\n  post_build:\n    commands:\n      - echo Build completed on `date`\n      - echo Pushing the Docker images...\n      - docker push $REPOSITORY_URI:latest\n      - docker push $REPOSITORY_URI:$IMAGE_TAG\n      - echo Writing image definitions file to $CODEBUILD_SRC_DIR...\n      - printf '[{\"name\":\"server\",\"imageUri\":\"%s\"}]' $REPOSITORY_URI:$IMAGE_TAG \u003e $CODEBUILD_SRC_DIR/server-imagedefinitions.json\nartifacts:\n  discard-paths: yes\n  files:\n    - server-imagedefinitions.json\ncache:\n  paths:\n    - '/root/.cache/pip/**/*'\n",
                            "vars.%": "2",
                            "vars.region": "us-east-1",
                            "vars.repository_url": "951653432607.dkr.ecr.us-east-1.amazonaws.com/polyledger/production"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.template"
                },
                "data.template_file.codebuild_policy": {
                    "type": "template_file",
                    "depends_on": [
                        "aws_s3_bucket.client_assets",
                        "aws_s3_bucket.source_artefacts"
                    ],
                    "primary": {
                        "id": "f19fef5fe5314683fcb90c82ad4bc8d7638c4401bdd538623acd420b9aa86cff",
                        "attributes": {
                            "id": "f19fef5fe5314683fcb90c82ad4bc8d7638c4401bdd538623acd420b9aa86cff",
                            "rendered": "{\n  \"Version\": \"2012-10-17\",\n  \"Statement\": [\n    {\n      \"Effect\": \"Allow\",\n      \"Resource\": [\n        \"*\"\n      ],\n      \"Action\": [\n        \"logs:CreateLogGroup\",\n        \"logs:CreateLogStream\",\n        \"logs:PutLogEvents\",\n        \"ecr:GetAuthorizationToken\",\n        \"ecr:InitiateLayerUpload\",\n        \"ecr:UploadLayerPart\",\n        \"ecr:CompleteLayerUpload\",\n        \"ecr:BatchCheckLayerAvailability\",\n        \"ecr:PutImage\",\n        \"ecs:RunTask\",\n        \"iam:PassRole\"\n      ]\n    },\n    {\n      \"Effect\":\"Allow\",\n      \"Action\": [\n        \"s3:DeleteObject\",\n        \"s3:GetObject\",\n        \"s3:GetObjectVersion\",\n        \"s3:GetBucketVersioning\",\n        \"s3:List*\",\n        \"s3:PutObject\"\n      ],\n      \"Resource\": [\n        \"arn:aws:s3:::polyledger-codepipeline-source-artefacts\",\n        \"arn:aws:s3:::polyledger-codepipeline-source-artefacts/*\",\n        \"arn:aws:s3:::polyledger-codepipeline-client-assets\",\n        \"arn:aws:s3:::polyledger-codepipeline-client-assets/*\"\n      ]\n    }\n  ]\n}\n",
                            "template": "{\n  \"Version\": \"2012-10-17\",\n  \"Statement\": [\n    {\n      \"Effect\": \"Allow\",\n      \"Resource\": [\n        \"*\"\n      ],\n      \"Action\": [\n        \"logs:CreateLogGroup\",\n        \"logs:CreateLogStream\",\n        \"logs:PutLogEvents\",\n        \"ecr:GetAuthorizationToken\",\n        \"ecr:InitiateLayerUpload\",\n        \"ecr:UploadLayerPart\",\n        \"ecr:CompleteLayerUpload\",\n        \"ecr:BatchCheckLayerAvailability\",\n        \"ecr:PutImage\",\n        \"ecs:RunTask\",\n        \"iam:PassRole\"\n      ]\n    },\n    {\n      \"Effect\":\"Allow\",\n      \"Action\": [\n        \"s3:DeleteObject\",\n        \"s3:GetObject\",\n        \"s3:GetObjectVersion\",\n        \"s3:GetBucketVersioning\",\n        \"s3:List*\",\n        \"s3:PutObject\"\n      ],\n      \"Resource\": [\n        \"${aws_s3_bucket_arn}\",\n        \"${aws_s3_bucket_arn}/*\",\n        \"${aws_s3_bucket_assets_arn}\",\n        \"${aws_s3_bucket_assets_arn}/*\"\n      ]\n    }\n  ]\n}\n",
                            "vars.%": "2",
                            "vars.aws_s3_bucket_arn": "arn:aws:s3:::polyledger-codepipeline-source-artefacts",
                            "vars.aws_s3_bucket_assets_arn": "arn:aws:s3:::polyledger-codepipeline-client-assets"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.template"
                },
                "data.template_file.codepipeline_policy": {
                    "type": "template_file",
                    "depends_on": [
                        "aws_s3_bucket.client_assets",
                        "aws_s3_bucket.source_artefacts"
                    ],
                    "primary": {
                        "id": "d23d2cb57e56058736bf6adf7175c31dfb606d081972085a73d28387d3028831",
                        "attributes": {
                            "id": "d23d2cb57e56058736bf6adf7175c31dfb606d081972085a73d28387d3028831",
                            "rendered": "{\n  \"Version\": \"2012-10-17\",\n  \"Statement\": [\n    {\n      \"Effect\":\"Allow\",\n      \"Action\": [\n        \"s3:GetObject\",\n        \"s3:GetObjectVersion\",\n        \"s3:GetBucketVersioning\",\n        \"s3:List*\",\n        \"s3:PutObject\"\n      ],\n      \"Resource\": [\n        \"arn:aws:s3:::polyledger-codepipeline-source-artefacts\",\n        \"arn:aws:s3:::polyledger-codepipeline-source-artefacts/*\",\n        \"arn:aws:s3:::polyledger-codepipeline-client-assets\",\n        \"arn:aws:s3:::polyledger-codepipeline-client-assets/*\"\n      ]\n    },\n    {\n      \"Effect\": \"Allow\",\n      \"Action\": [\n        \"codebuild:BatchGetBuilds\",\n        \"codebuild:StartBuild\"\n      ],\n      \"Resource\": \"*\"\n    },\n    {\n      \"Action\": [\n        \"ecs:*\",\n        \"events:DescribeRule\",\n        \"events:DeleteRule\",\n        \"events:ListRuleNamesByTarget\",\n        \"events:ListTargetsByRule\",\n        \"events:PutRule\",\n        \"events:PutTargets\",\n        \"events:RemoveTargets\",\n        \"iam:ListAttachedRolePolicies\",\n        \"iam:ListInstanceProfiles\",\n        \"iam:ListRoles\",\n        \"logs:CreateLogGroup\",\n        \"logs:DescribeLogGroups\",\n        \"logs:FilterLogEvents\"\n      ],\n      \"Resource\": \"*\",\n      \"Effect\": \"Allow\"\n    },\n    {\n      \"Action\": \"iam:PassRole\",\n      \"Effect\": \"Allow\",\n      \"Resource\": [\n        \"*\"\n      ],\n      \"Condition\": {\n        \"StringLike\": {\n          \"iam:PassedToService\": \"ecs-tasks.amazonaws.com\"\n        }\n      }\n    },\n    {\n      \"Action\": \"iam:PassRole\",\n      \"Effect\": \"Allow\",\n      \"Resource\": [\n        \"arn:aws:iam::*:role/ecsInstanceRole*\"\n      ],\n      \"Condition\": {\n        \"StringLike\": {\n          \"iam:PassedToService\": [\n            \"ec2.amazonaws.com\",\n            \"ec2.amazonaws.com.cn\"\n          ]\n        }\n      }\n    },\n    {\n      \"Action\": \"iam:PassRole\",\n      \"Effect\": \"Allow\",\n      \"Resource\": [\n        \"arn:aws:iam::*:role/ecsAutoscaleRole*\"\n      ],\n      \"Condition\": {\n        \"StringLike\": {\n          \"iam:PassedToService\": [\n            \"application-autoscaling.amazonaws.com\",\n            \"application-autoscaling.amazonaws.com.cn\"\n          ]\n        }\n      }\n    },\n    {\n      \"Effect\": \"Allow\",\n      \"Action\": \"iam:CreateServiceLinkedRole\",\n      \"Resource\": \"*\",\n      \"Condition\": {\n        \"StringLike\": {\n          \"iam:AWSServiceName\": [\n            \"ecs.amazonaws.com\",\n            \"spot.amazonaws.com\",\n            \"spotfleet.amazonaws.com\"\n          ]\n        }\n      }\n    }\n  ]\n}\n",
                            "template": "{\n  \"Version\": \"2012-10-17\",\n  \"Statement\": [\n    {\n      \"Effect\":\"Allow\",\n      \"Action\": [\n        \"s3:GetObject\",\n        \"s3:GetObjectVersion\",\n        \"s3:GetBucketVersioning\",\n        \"s3:List*\",\n        \"s3:PutObject\"\n      ],\n      \"Resource\": [\n        \"${aws_s3_bucket_arn}\",\n        \"${aws_s3_bucket_arn}/*\",\n        \"${aws_s3_bucket_assets_arn}\",\n        \"${aws_s3_bucket_assets_arn}/*\"\n      ]\n    },\n    {\n      \"Effect\": \"Allow\",\n      \"Action\": [\n        \"codebuild:BatchGetBuilds\",\n        \"codebuild:StartBuild\"\n      ],\n      \"Resource\": \"*\"\n    },\n    {\n      \"Action\": [\n        \"ecs:*\",\n        \"events:DescribeRule\",\n        \"events:DeleteRule\",\n        \"events:ListRuleNamesByTarget\",\n        \"events:ListTargetsByRule\",\n        \"events:PutRule\",\n        \"events:PutTargets\",\n        \"events:RemoveTargets\",\n        \"iam:ListAttachedRolePolicies\",\n        \"iam:ListInstanceProfiles\",\n        \"iam:ListRoles\",\n        \"logs:CreateLogGroup\",\n        \"logs:DescribeLogGroups\",\n        \"logs:FilterLogEvents\"\n      ],\n      \"Resource\": \"*\",\n      \"Effect\": \"Allow\"\n    },\n    {\n      \"Action\": \"iam:PassRole\",\n      \"Effect\": \"Allow\",\n      \"Resource\": [\n        \"*\"\n      ],\n      \"Condition\": {\n        \"StringLike\": {\n          \"iam:PassedToService\": \"ecs-tasks.amazonaws.com\"\n        }\n      }\n    },\n    {\n      \"Action\": \"iam:PassRole\",\n      \"Effect\": \"Allow\",\n      \"Resource\": [\n        \"arn:aws:iam::*:role/ecsInstanceRole*\"\n      ],\n      \"Condition\": {\n        \"StringLike\": {\n          \"iam:PassedToService\": [\n            \"ec2.amazonaws.com\",\n            \"ec2.amazonaws.com.cn\"\n          ]\n        }\n      }\n    },\n    {\n      \"Action\": \"iam:PassRole\",\n      \"Effect\": \"Allow\",\n      \"Resource\": [\n        \"arn:aws:iam::*:role/ecsAutoscaleRole*\"\n      ],\n      \"Condition\": {\n        \"StringLike\": {\n          \"iam:PassedToService\": [\n            \"application-autoscaling.amazonaws.com\",\n            \"application-autoscaling.amazonaws.com.cn\"\n          ]\n        }\n      }\n    },\n    {\n      \"Effect\": \"Allow\",\n      \"Action\": \"iam:CreateServiceLinkedRole\",\n      \"Resource\": \"*\",\n      \"Condition\": {\n        \"StringLike\": {\n          \"iam:AWSServiceName\": [\n            \"ecs.amazonaws.com\",\n            \"spot.amazonaws.com\",\n            \"spotfleet.amazonaws.com\"\n          ]\n        }\n      }\n    }\n  ]\n}\n",
                            "vars.%": "2",
                            "vars.aws_s3_bucket_arn": "arn:aws:s3:::polyledger-codepipeline-source-artefacts",
                            "vars.aws_s3_bucket_assets_arn": "arn:aws:s3:::polyledger-codepipeline-client-assets"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.template"
                }
            },
            "depends_on": []
        },
        {
            "path": [
                "root",
                "ecs"
            ],
            "outputs": {
                "alb_dns_name": {
                    "sensitive": false,
                    "type": "string",
                    "value": "production-alb-polyledger-659366779.us-east-1.elb.amazonaws.com"
                },
                "alb_zone_id": {
                    "sensitive": false,
                    "type": "string",
                    "value": "Z35SXDOTRQ7X7K"
                },
                "cluster_name": {
                    "sensitive": false,
                    "type": "string",
                    "value": "production-ecs-cluster"
                },
                "repository_url": {
                    "sensitive": false,
                    "type": "string",
                    "value": "951653432607.dkr.ecr.us-east-1.amazonaws.com/polyledger/production"
                },
                "security_group_id": {
                    "sensitive": false,
                    "type": "string",
                    "value": "sg-34bc767c"
                },
                "service_name": {
                    "sensitive": false,
                    "type": "string",
                    "value": "production-server"
                }
            },
            "resources": {
                "aws_alb.alb_polyledger": {
                    "type": "aws_alb",
                    "depends_on": [
                        "aws_security_group.web_inbound_sg"
                    ],
                    "primary": {
                        "id": "arn:aws:elasticloadbalancing:us-east-1:951653432607:loadbalancer/app/production-alb-polyledger/7457042b1729a2d6",
                        "attributes": {
                            "access_logs.#": "0",
                            "arn": "arn:aws:elasticloadbalancing:us-east-1:951653432607:loadbalancer/app/production-alb-polyledger/7457042b1729a2d6",
                            "arn_suffix": "app/production-alb-polyledger/7457042b1729a2d6",
                            "dns_name": "production-alb-polyledger-659366779.us-east-1.elb.amazonaws.com",
                            "enable_deletion_protection": "false",
                            "enable_http2": "true",
                            "id": "arn:aws:elasticloadbalancing:us-east-1:951653432607:loadbalancer/app/production-alb-polyledger/7457042b1729a2d6",
                            "idle_timeout": "60",
                            "internal": "false",
                            "ip_address_type": "ipv4",
                            "load_balancer_type": "application",
                            "name": "production-alb-polyledger",
                            "security_groups.#": "2",
                            "security_groups.1704523445": "sg-f6b872be",
                            "security_groups.994581296": "sg-04a16b4c",
                            "subnet_mapping.#": "0",
                            "subnets.#": "2",
                            "subnets.3196240378": "subnet-b3af5d9d",
                            "subnets.782180594": "subnet-508f4837",
                            "tags.%": "2",
                            "tags.Environment": "production",
                            "tags.Name": "production-alb-polyledger",
                            "vpc_id": "vpc-f1fada8a",
                            "zone_id": "Z35SXDOTRQ7X7K"
                        },
                        "meta": {
                            "e2bfb730-ecaa-11e6-8f88-34363bc7c4c0": {
                                "create": 600000000000,
                                "delete": 600000000000,
                                "update": 600000000000
                            }
                        },
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.aws"
                },
                "aws_alb_listener.polyledger": {
                    "type": "aws_alb_listener",
                    "depends_on": [
                        "aws_alb.alb_polyledger",
                        "aws_alb_target_group.alb_target_group"
                    ],
                    "primary": {
                        "id": "arn:aws:elasticloadbalancing:us-east-1:951653432607:listener/app/production-alb-polyledger/7457042b1729a2d6/bdad941575860536",
                        "attributes": {
                            "arn": "arn:aws:elasticloadbalancing:us-east-1:951653432607:listener/app/production-alb-polyledger/7457042b1729a2d6/bdad941575860536",
                            "default_action.#": "1",
                            "default_action.0.target_group_arn": "arn:aws:elasticloadbalancing:us-east-1:951653432607:targetgroup/production-alb-target-group-5488/07d19de798c6b458",
                            "default_action.0.type": "forward",
                            "id": "arn:aws:elasticloadbalancing:us-east-1:951653432607:listener/app/production-alb-polyledger/7457042b1729a2d6/bdad941575860536",
                            "load_balancer_arn": "arn:aws:elasticloadbalancing:us-east-1:951653432607:loadbalancer/app/production-alb-polyledger/7457042b1729a2d6",
                            "port": "80",
                            "protocol": "HTTP",
                            "ssl_policy": ""
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.aws"
                },
                "aws_alb_target_group.alb_target_group": {
                    "type": "aws_alb_target_group",
                    "depends_on": [
                        "aws_alb.alb_polyledger",
                        "random_id.target_group_sufix"
                    ],
                    "primary": {
                        "id": "arn:aws:elasticloadbalancing:us-east-1:951653432607:targetgroup/production-alb-target-group-5488/07d19de798c6b458",
                        "attributes": {
                            "arn": "arn:aws:elasticloadbalancing:us-east-1:951653432607:targetgroup/production-alb-target-group-5488/07d19de798c6b458",
                            "arn_suffix": "targetgroup/production-alb-target-group-5488/07d19de798c6b458",
                            "deregistration_delay": "300",
                            "health_check.#": "1",
                            "health_check.0.healthy_threshold": "5",
                            "health_check.0.interval": "30",
                            "health_check.0.matcher": "200",
                            "health_check.0.path": "/",
                            "health_check.0.port": "traffic-port",
                            "health_check.0.protocol": "HTTP",
                            "health_check.0.timeout": "5",
                            "health_check.0.unhealthy_threshold": "2",
                            "id": "arn:aws:elasticloadbalancing:us-east-1:951653432607:targetgroup/production-alb-target-group-5488/07d19de798c6b458",
                            "name": "production-alb-target-group-5488",
                            "port": "80",
                            "protocol": "HTTP",
                            "stickiness.#": "1",
                            "stickiness.0.cookie_duration": "86400",
                            "stickiness.0.enabled": "false",
                            "stickiness.0.type": "lb_cookie",
                            "tags.%": "0",
                            "target_type": "ip",
                            "vpc_id": "vpc-f1fada8a"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.aws"
                },
                "aws_appautoscaling_policy.down": {
                    "type": "aws_appautoscaling_policy",
                    "depends_on": [
                        "aws_appautoscaling_target.target",
                        "aws_ecs_cluster.cluster",
                        "aws_ecs_service.server"
                    ],
                    "primary": {
                        "id": "production_scale_down",
                        "attributes": {
                            "alarms.#": "0",
                            "arn": "arn:aws:autoscaling:us-east-1:951653432607:scalingPolicy:ccadbdf3-c7dd-4917-ad02-7d0d37aeafef:resource/ecs/service/production-ecs-cluster/production-server:policyName/production_scale_down",
                            "id": "production_scale_down",
                            "name": "production_scale_down",
                            "policy_type": "StepScaling",
                            "resource_id": "service/production-ecs-cluster/production-server",
                            "scalable_dimension": "ecs:service:DesiredCount",
                            "service_namespace": "ecs",
                            "step_scaling_policy_configuration.#": "1",
                            "step_scaling_policy_configuration.0.adjustment_type": "ChangeInCapacity",
                            "step_scaling_policy_configuration.0.cooldown": "60",
                            "step_scaling_policy_configuration.0.metric_aggregation_type": "Maximum",
                            "step_scaling_policy_configuration.0.min_adjustment_magnitude": "0",
                            "step_scaling_policy_configuration.0.step_adjustment.#": "1",
                            "step_scaling_policy_configuration.0.step_adjustment.1330763481.metric_interval_lower_bound": "0",
                            "step_scaling_policy_configuration.0.step_adjustment.1330763481.metric_interval_upper_bound": "-1",
                            "step_scaling_policy_configuration.0.step_adjustment.1330763481.scaling_adjustment": "-1",
                            "target_tracking_scaling_policy_configuration.#": "0"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.aws"
                },
                "aws_appautoscaling_policy.up": {
                    "type": "aws_appautoscaling_policy",
                    "depends_on": [
                        "aws_appautoscaling_target.target",
                        "aws_ecs_cluster.cluster",
                        "aws_ecs_service.server"
                    ],
                    "primary": {
                        "id": "production_scale_up",
                        "attributes": {
                            "alarms.#": "0",
                            "arn": "arn:aws:autoscaling:us-east-1:951653432607:scalingPolicy:ccadbdf3-c7dd-4917-ad02-7d0d37aeafef:resource/ecs/service/production-ecs-cluster/production-server:policyName/production_scale_up",
                            "id": "production_scale_up",
                            "name": "production_scale_up",
                            "policy_type": "StepScaling",
                            "resource_id": "service/production-ecs-cluster/production-server",
                            "scalable_dimension": "ecs:service:DesiredCount",
                            "service_namespace": "ecs",
                            "step_scaling_policy_configuration.#": "1",
                            "step_scaling_policy_configuration.0.adjustment_type": "ChangeInCapacity",
                            "step_scaling_policy_configuration.0.cooldown": "60",
                            "step_scaling_policy_configuration.0.metric_aggregation_type": "Maximum",
                            "step_scaling_policy_configuration.0.min_adjustment_magnitude": "0",
                            "step_scaling_policy_configuration.0.step_adjustment.#": "1",
                            "step_scaling_policy_configuration.0.step_adjustment.2280411133.metric_interval_lower_bound": "0",
                            "step_scaling_policy_configuration.0.step_adjustment.2280411133.metric_interval_upper_bound": "-1",
                            "step_scaling_policy_configuration.0.step_adjustment.2280411133.scaling_adjustment": "1",
                            "target_tracking_scaling_policy_configuration.#": "0"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.aws"
                },
                "aws_appautoscaling_target.target": {
                    "type": "aws_appautoscaling_target",
                    "depends_on": [
                        "aws_ecs_cluster.cluster",
                        "aws_ecs_service.server",
                        "aws_iam_role.ecs_autoscale_role"
                    ],
                    "primary": {
                        "id": "service/production-ecs-cluster/production-server",
                        "attributes": {
                            "id": "service/production-ecs-cluster/production-server",
                            "max_capacity": "4",
                            "min_capacity": "2",
                            "resource_id": "service/production-ecs-cluster/production-server",
                            "role_arn": "arn:aws:iam::951653432607:role/aws-service-role/ecs.application-autoscaling.amazonaws.com/AWSServiceRoleForApplicationAutoScaling_ECSService",
                            "scalable_dimension": "ecs:service:DesiredCount",
                            "service_namespace": "ecs"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.aws"
                },
                "aws_cloudwatch_log_group.polyledger": {
                    "type": "aws_cloudwatch_log_group",
                    "depends_on": [],
                    "primary": {
                        "id": "polyledger",
                        "attributes": {
                            "arn": "arn:aws:logs:us-east-1:951653432607:log-group:polyledger:*",
                            "id": "polyledger",
                            "kms_key_id": "",
                            "name": "polyledger",
                            "retention_in_days": "0",
                            "tags.%": "2",
                            "tags.Application": "Polyledger",
                            "tags.Environment": "production"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.aws"
                },
                "aws_cloudwatch_metric_alarm.service_cpu_high": {
                    "type": "aws_cloudwatch_metric_alarm",
                    "depends_on": [
                        "aws_appautoscaling_policy.down",
                        "aws_appautoscaling_policy.up",
                        "aws_ecs_cluster.cluster",
                        "aws_ecs_service.server"
                    ],
                    "primary": {
                        "id": "production_polyledger_server_cpu_utilization_high",
                        "attributes": {
                            "actions_enabled": "true",
                            "alarm_actions.#": "1",
                            "alarm_actions.545565454": "arn:aws:autoscaling:us-east-1:951653432607:scalingPolicy:ccadbdf3-c7dd-4917-ad02-7d0d37aeafef:resource/ecs/service/production-ecs-cluster/production-server:policyName/production_scale_up",
                            "alarm_description": "",
                            "alarm_name": "production_polyledger_server_cpu_utilization_high",
                            "comparison_operator": "GreaterThanOrEqualToThreshold",
                            "datapoints_to_alarm": "0",
                            "dimensions.%": "2",
                            "dimensions.ClusterName": "production-ecs-cluster",
                            "dimensions.ServiceName": "production-server",
                            "evaluate_low_sample_count_percentiles": "",
                            "evaluation_periods": "2",
                            "extended_statistic": "",
                            "id": "production_polyledger_server_cpu_utilization_high",
                            "insufficient_data_actions.#": "0",
                            "metric_name": "CPUUtilization",
                            "namespace": "AWS/ECS",
                            "ok_actions.#": "1",
                            "ok_actions.2884964940": "arn:aws:autoscaling:us-east-1:951653432607:scalingPolicy:ccadbdf3-c7dd-4917-ad02-7d0d37aeafef:resource/ecs/service/production-ecs-cluster/production-server:policyName/production_scale_down",
                            "period": "60",
                            "statistic": "Maximum",
                            "threshold": "85",
                            "treat_missing_data": "missing",
                            "unit": ""
                        },
                        "meta": {
                            "schema_version": "1"
                        },
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.aws"
                },
                "aws_ecr_repository.polyledger_app": {
                    "type": "aws_ecr_repository",
                    "depends_on": [],
                    "primary": {
                        "id": "polyledger/production",
                        "attributes": {
                            "arn": "arn:aws:ecr:us-east-1:951653432607:repository/polyledger/production",
                            "id": "polyledger/production",
                            "name": "polyledger/production",
                            "registry_id": "951653432607",
                            "repository_url": "951653432607.dkr.ecr.us-east-1.amazonaws.com/polyledger/production"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.aws"
                },
                "aws_ecr_repository_policy.repository-policy": {
                    "type": "aws_ecr_repository_policy",
                    "depends_on": [
                        "aws_ecr_repository.polyledger_app"
                    ],
                    "primary": {
                        "id": "polyledger/production",
                        "attributes": {
                            "id": "polyledger/production",
                            "policy": "{\n    \"Version\": \"2008-10-17\",\n    \"Statement\": [\n        {\n            \"Sid\": \"new policy\",\n            \"Effect\": \"Allow\",\n            \"Principal\": \"*\",\n            \"Action\": [\n                \"ecr:GetDownloadUrlForLayer\",\n                \"ecr:BatchGetImage\",\n                \"ecr:BatchCheckLayerAvailability\",\n                \"ecr:PutImage\",\n                \"ecr:InitiateLayerUpload\",\n                \"ecr:UploadLayerPart\",\n                \"ecr:CompleteLayerUpload\",\n                \"ecr:DescribeRepositories\",\n                \"ecr:GetRepositoryPolicy\",\n                \"ecr:ListImages\",\n                \"ecr:DeleteRepository\",\n                \"ecr:BatchDeleteImage\",\n                \"ecr:SetRepositoryPolicy\",\n                \"ecr:DeleteRepositoryPolicy\"\n            ]\n        }\n    ]\n}\n",
                            "registry_id": "951653432607",
                            "repository": "polyledger/production"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.aws"
                },
                "aws_ecs_cluster.cluster": {
                    "type": "aws_ecs_cluster",
                    "depends_on": [],
                    "primary": {
                        "id": "arn:aws:ecs:us-east-1:951653432607:cluster/production-ecs-cluster",
                        "attributes": {
                            "arn": "arn:aws:ecs:us-east-1:951653432607:cluster/production-ecs-cluster",
                            "id": "arn:aws:ecs:us-east-1:951653432607:cluster/production-ecs-cluster",
                            "name": "production-ecs-cluster"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.aws"
                },
                "aws_ecs_service.frontend": {
                    "type": "aws_ecs_service",
                    "depends_on": [
                        "aws_alb_target_group.alb_target_group",
                        "aws_ecs_cluster.cluster",
                        "aws_ecs_task_definition.frontend",
                        "aws_iam_role_policy.ecs_service_role_policy",
                        "aws_security_group.ecs_service",
                        "data.aws_ecs_task_definition.frontend"
                    ],
                    "primary": {
                        "id": "arn:aws:ecs:us-east-1:951653432607:service/production-frontend",
                        "attributes": {
                            "cluster": "arn:aws:ecs:us-east-1:951653432607:cluster/production-ecs-cluster",
                            "deployment_maximum_percent": "200",
                            "deployment_minimum_healthy_percent": "100",
                            "desired_count": "1",
                            "health_check_grace_period_seconds": "0",
                            "iam_role": "aws-service-role",
                            "id": "arn:aws:ecs:us-east-1:951653432607:service/production-frontend",
                            "launch_type": "FARGATE",
                            "load_balancer.#": "1",
                            "load_balancer.15218928.container_name": "frontend",
                            "load_balancer.15218928.container_port": "80",
                            "load_balancer.15218928.elb_name": "",
                            "load_balancer.15218928.target_group_arn": "arn:aws:elasticloadbalancing:us-east-1:951653432607:targetgroup/production-alb-target-group-5488/07d19de798c6b458",
                            "name": "production-frontend",
                            "network_configuration.#": "1",
                            "network_configuration.0.assign_public_ip": "false",
                            "network_configuration.0.security_groups.#": "2",
                            "network_configuration.0.security_groups.1704523445": "sg-f6b872be",
                            "network_configuration.0.security_groups.2309242908": "sg-34bc767c",
                            "network_configuration.0.subnets.#": "2",
                            "network_configuration.0.subnets.1470451034": "subnet-2c9e594b",
                            "network_configuration.0.subnets.23504020": "subnet-8f9b69a1",
                            "placement_constraints.#": "0",
                            "placement_strategy.#": "0",
                            "service_registries.#": "0",
                            "task_definition": "production_frontend:7"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.aws"
                },
                "aws_ecs_service.server": {
                    "type": "aws_ecs_service",
                    "depends_on": [
                        "aws_ecs_cluster.cluster",
                        "aws_ecs_task_definition.server",
                        "aws_iam_role_policy.ecs_service_role_policy",
                        "aws_security_group.ecs_service",
                        "data.aws_ecs_task_definition.server"
                    ],
                    "primary": {
                        "id": "arn:aws:ecs:us-east-1:951653432607:service/production-server",
                        "attributes": {
                            "cluster": "arn:aws:ecs:us-east-1:951653432607:cluster/production-ecs-cluster",
                            "deployment_maximum_percent": "200",
                            "deployment_minimum_healthy_percent": "100",
                            "desired_count": "1",
                            "health_check_grace_period_seconds": "0",
                            "iam_role": "aws-service-role",
                            "id": "arn:aws:ecs:us-east-1:951653432607:service/production-server",
                            "launch_type": "FARGATE",
                            "load_balancer.#": "0",
                            "name": "production-server",
                            "network_configuration.#": "1",
                            "network_configuration.0.assign_public_ip": "false",
                            "network_configuration.0.security_groups.#": "2",
                            "network_configuration.0.security_groups.1704523445": "sg-f6b872be",
                            "network_configuration.0.security_groups.2309242908": "sg-34bc767c",
                            "network_configuration.0.subnets.#": "2",
                            "network_configuration.0.subnets.1470451034": "subnet-2c9e594b",
                            "network_configuration.0.subnets.23504020": "subnet-8f9b69a1",
                            "placement_constraints.#": "0",
                            "placement_strategy.#": "0",
                            "service_registries.#": "0",
                            "task_definition": "production_server:7"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.aws"
                },
                "aws_ecs_task_definition.frontend": {
                    "type": "aws_ecs_task_definition",
                    "depends_on": [
                        "aws_iam_role.ecs_execution_role",
                        "data.template_file.frontend_task"
                    ],
                    "primary": {
                        "id": "production_frontend",
                        "attributes": {
                            "arn": "arn:aws:ecs:us-east-1:951653432607:task-definition/production_frontend:7",
                            "container_definitions": "[{\"cpu\":0,\"environment\":[{\"name\":\"NPM_TOKEN\",\"value\":\"6047c597-157d-4a45-b2bb-a76bc4405c95\"}],\"essential\":true,\"image\":\"951653432607.dkr.ecr.us-east-1.amazonaws.com/polyledger/production/client\",\"logConfiguration\":{\"logDriver\":\"awslogs\",\"options\":{\"awslogs-group\":\"polyledger\",\"awslogs-region\":\"us-east-1\",\"awslogs-stream-prefix\":\"frontend\"}},\"memory\":300,\"mountPoints\":[],\"name\":\"frontend\",\"portMappings\":[{\"containerPort\":80,\"hostPort\":80,\"protocol\":\"tcp\"}],\"volumesFrom\":[]}]",
                            "cpu": "256",
                            "execution_role_arn": "arn:aws:iam::951653432607:role/ecs_task_execution_role",
                            "family": "production_frontend",
                            "id": "production_frontend",
                            "memory": "512",
                            "network_mode": "awsvpc",
                            "placement_constraints.#": "0",
                            "requires_compatibilities.#": "1",
                            "requires_compatibilities.3072437307": "FARGATE",
                            "revision": "7",
                            "task_role_arn": "arn:aws:iam::951653432607:role/ecs_task_execution_role",
                            "volume.#": "0"
                        },
                        "meta": {
                            "schema_version": "1"
                        },
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.aws"
                },
                "aws_ecs_task_definition.server": {
                    "type": "aws_ecs_task_definition",
                    "depends_on": [
                        "aws_iam_role.ecs_execution_role",
                        "data.template_file.server_task"
                    ],
                    "primary": {
                        "id": "production_server",
                        "attributes": {
                            "arn": "arn:aws:ecs:us-east-1:951653432607:task-definition/production_server:7",
                            "container_definitions": "[{\"command\":[\"start.sh\"],\"cpu\":0,\"environment\":[{\"name\":\"DJANGO_SETTINGS_MODULE\",\"value\":\"polyledger.settings.production\"},{\"name\":\"PORT\",\"value\":\"80\"},{\"name\":\"BITBUTTER_BASE_URI\",\"value\":\"https://app-8697.on-aptible.com\"},{\"name\":\"EMAIL_HOST_PASSWORD\",\"value\":\"29f391e0c4a33e2c02c5455f47657c76\"},{\"name\":\"SECRET_KEY\",\"value\":\"4!!ro=bp9po_v^^n^*i!aftl43tv78e#@at0xfdm191m@r3b4j\"},{\"name\":\"BITBUTTER_API_SECRET\",\"value\":\"L55ECdCoYdv7PFrrd5nhWqxbnmDsPgR2G5vc8ywwSC6Rio2TiHpK\"},{\"name\":\"BITBUTTER_PARTNERSHIP_ID\",\"value\":\"a91baa13-d7c8-430a-b96f-c5670ac4898d\"},{\"name\":\"BITBUTTER_PARTNER_ID\",\"value\":\"cb0351ed-2c9f-42c6-95e7-175e4c70807f\"},{\"name\":\"NPM_TOKEN\",\"value\":\"6047c597-157d-4a45-b2bb-a76bc4405c95\"},{\"name\":\"BITBUTTER_API_KEY\",\"value\":\"1DhNsDorooYEfNu1hLLRy9qdMqfjn3B2Zc\"}],\"essential\":true,\"image\":\"951653432607.dkr.ecr.us-east-1.amazonaws.com/polyledger/production\",\"logConfiguration\":{\"logDriver\":\"awslogs\",\"options\":{\"awslogs-group\":\"polyledger\",\"awslogs-region\":\"us-east-1\",\"awslogs-stream-prefix\":\"server\"}},\"memory\":300,\"mountPoints\":[],\"name\":\"server\",\"portMappings\":[{\"containerPort\":8000,\"hostPort\":8000,\"protocol\":\"tcp\"}],\"volumesFrom\":[]}]",
                            "cpu": "256",
                            "execution_role_arn": "arn:aws:iam::951653432607:role/ecs_task_execution_role",
                            "family": "production_server",
                            "id": "production_server",
                            "memory": "512",
                            "network_mode": "awsvpc",
                            "placement_constraints.#": "0",
                            "requires_compatibilities.#": "1",
                            "requires_compatibilities.3072437307": "FARGATE",
                            "revision": "7",
                            "task_role_arn": "arn:aws:iam::951653432607:role/ecs_task_execution_role",
                            "volume.#": "0"
                        },
                        "meta": {
                            "schema_version": "1"
                        },
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.aws"
                },
                "aws_iam_role.ecs_autoscale_role": {
                    "type": "aws_iam_role",
                    "depends_on": [],
                    "primary": {
                        "id": "production_ecs_autoscale_role",
                        "attributes": {
                            "arn": "arn:aws:iam::951653432607:role/production_ecs_autoscale_role",
                            "assume_role_policy": "{\"Version\":\"2012-10-17\",\"Statement\":[{\"Effect\":\"Allow\",\"Principal\":{\"Service\":\"application-autoscaling.amazonaws.com\"},\"Action\":\"sts:AssumeRole\"}]}",
                            "create_date": "2018-05-11T01:29:00Z",
                            "force_detach_policies": "false",
                            "id": "production_ecs_autoscale_role",
                            "max_session_duration": "3600",
                            "name": "production_ecs_autoscale_role",
                            "path": "/",
                            "unique_id": "AROAJ55MU3EI3ZXYC57XO"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.aws"
                },
                "aws_iam_role.ecs_execution_role": {
                    "type": "aws_iam_role",
                    "depends_on": [],
                    "primary": {
                        "id": "ecs_task_execution_role",
                        "attributes": {
                            "arn": "arn:aws:iam::951653432607:role/ecs_task_execution_role",
                            "assume_role_policy": "{\"Version\":\"2012-10-17\",\"Statement\":[{\"Sid\":\"\",\"Effect\":\"Allow\",\"Principal\":{\"Service\":\"ecs-tasks.amazonaws.com\"},\"Action\":\"sts:AssumeRole\"}]}",
                            "create_date": "2018-05-11T01:29:00Z",
                            "force_detach_policies": "false",
                            "id": "ecs_task_execution_role",
                            "max_session_duration": "3600",
                            "name": "ecs_task_execution_role",
                            "path": "/",
                            "unique_id": "AROAJJMHYYCNTKJ2QDPXM"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.aws"
                },
                "aws_iam_role.ecs_role": {
                    "type": "aws_iam_role",
                    "depends_on": [
                        "data.aws_iam_policy_document.ecs_service_role"
                    ],
                    "primary": {
                        "id": "ecs_role",
                        "attributes": {
                            "arn": "arn:aws:iam::951653432607:role/ecs_role",
                            "assume_role_policy": "{\"Version\":\"2012-10-17\",\"Statement\":[{\"Sid\":\"\",\"Effect\":\"Allow\",\"Principal\":{\"Service\":\"ecs.amazonaws.com\"},\"Action\":\"sts:AssumeRole\"}]}",
                            "create_date": "2018-05-11T01:29:00Z",
                            "force_detach_policies": "false",
                            "id": "ecs_role",
                            "max_session_duration": "3600",
                            "name": "ecs_role",
                            "path": "/",
                            "unique_id": "AROAI4PDT7YY3NFGY4UB6"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.aws"
                },
                "aws_iam_role_policy.ecs_autoscale_role_policy": {
                    "type": "aws_iam_role_policy",
                    "depends_on": [
                        "aws_iam_role.ecs_autoscale_role"
                    ],
                    "primary": {
                        "id": "production_ecs_autoscale_role:ecs_autoscale_role_policy",
                        "attributes": {
                            "id": "production_ecs_autoscale_role:ecs_autoscale_role_policy",
                            "name": "ecs_autoscale_role_policy",
                            "policy": "{\n  \"Version\": \"2012-10-17\",\n  \"Statement\": [\n    {\n      \"Effect\": \"Allow\",\n      \"Action\": [\n        \"ecs:DescribeServices\",\n        \"ecs:UpdateService\"\n      ],\n      \"Resource\": [\n        \"*\"\n      ]\n    },\n    {\n      \"Effect\": \"Allow\",\n      \"Action\": [\n        \"cloudwatch:DescribeAlarms\"\n      ],\n      \"Resource\": [\n        \"*\"\n      ]\n    }\n  ]\n}\n",
                            "role": "production_ecs_autoscale_role"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.aws"
                },
                "aws_iam_role_policy.ecs_execution_role_policy": {
                    "type": "aws_iam_role_policy",
                    "depends_on": [
                        "aws_iam_role.ecs_execution_role"
                    ],
                    "primary": {
                        "id": "ecs_task_execution_role:ecs_execution_role_policy",
                        "attributes": {
                            "id": "ecs_task_execution_role:ecs_execution_role_policy",
                            "name": "ecs_execution_role_policy",
                            "policy": "{\n  \"Version\": \"2012-10-17\",\n  \"Statement\": [\n    {\n      \"Effect\": \"Allow\",\n      \"Action\": [\n        \"ecr:GetAuthorizationToken\",\n        \"ecr:BatchCheckLayerAvailability\",\n        \"ecr:GetDownloadUrlForLayer\",\n        \"ecr:BatchGetImage\",\n        \"logs:CreateLogStream\",\n        \"logs:PutLogEvents\"\n      ],\n      \"Resource\": \"*\"\n    }\n  ]\n}\n",
                            "role": "ecs_task_execution_role"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.aws"
                },
                "aws_iam_role_policy.ecs_service_role_policy": {
                    "type": "aws_iam_role_policy",
                    "depends_on": [
                        "aws_iam_role.ecs_role",
                        "data.aws_iam_policy_document.ecs_service_policy"
                    ],
                    "primary": {
                        "id": "ecs_role:ecs_service_role_policy",
                        "attributes": {
                            "id": "ecs_role:ecs_service_role_policy",
                            "name": "ecs_service_role_policy",
                            "policy": "{\n  \"Version\": \"2012-10-17\",\n  \"Statement\": [\n    {\n      \"Sid\": \"\",\n      \"Effect\": \"Allow\",\n      \"Action\": [\n        \"elasticloadbalancing:RegisterInstancesWithLoadBalancer\",\n        \"elasticloadbalancing:Describe*\",\n        \"elasticloadbalancing:DeregisterInstancesFromLoadBalancer\",\n        \"ec2:Describe*\",\n        \"ec2:AuthorizeSecurityGroupIngress\"\n      ],\n      \"Resource\": \"*\"\n    }\n  ]\n}",
                            "role": "ecs_role"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.aws"
                },
                "aws_security_group.ecs_service": {
                    "type": "aws_security_group",
                    "depends_on": [],
                    "primary": {
                        "id": "sg-34bc767c",
                        "attributes": {
                            "arn": "arn:aws:ec2:us-east-1:951653432607:security-group/sg-34bc767c",
                            "description": "Allow egress from container",
                            "egress.#": "1",
                            "egress.482069346.cidr_blocks.#": "1",
                            "egress.482069346.cidr_blocks.0": "0.0.0.0/0",
                            "egress.482069346.description": "",
                            "egress.482069346.from_port": "0",
                            "egress.482069346.ipv6_cidr_blocks.#": "0",
                            "egress.482069346.prefix_list_ids.#": "0",
                            "egress.482069346.protocol": "-1",
                            "egress.482069346.security_groups.#": "0",
                            "egress.482069346.self": "false",
                            "egress.482069346.to_port": "0",
                            "id": "sg-34bc767c",
                            "ingress.#": "1",
                            "ingress.3068409405.cidr_blocks.#": "1",
                            "ingress.3068409405.cidr_blocks.0": "0.0.0.0/0",
                            "ingress.3068409405.description": "",
                            "ingress.3068409405.from_port": "8",
                            "ingress.3068409405.ipv6_cidr_blocks.#": "0",
                            "ingress.3068409405.protocol": "icmp",
                            "ingress.3068409405.security_groups.#": "0",
                            "ingress.3068409405.self": "false",
                            "ingress.3068409405.to_port": "0",
                            "name": "production-ecs-service-sg",
                            "owner_id": "951653432607",
                            "revoke_rules_on_delete": "false",
                            "tags.%": "2",
                            "tags.Environment": "production",
                            "tags.Name": "production-ecs-service-sg",
                            "vpc_id": "vpc-f1fada8a"
                        },
                        "meta": {
                            "e2bfb730-ecaa-11e6-8f88-34363bc7c4c0": {
                                "create": 600000000000,
                                "delete": 600000000000
                            },
                            "schema_version": "1"
                        },
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.aws"
                },
                "aws_security_group.web_inbound_sg": {
                    "type": "aws_security_group",
                    "depends_on": [],
                    "primary": {
                        "id": "sg-04a16b4c",
                        "attributes": {
                            "arn": "arn:aws:ec2:us-east-1:951653432607:security-group/sg-04a16b4c",
                            "description": "Allow HTTP from Anywhere into ALB",
                            "egress.#": "1",
                            "egress.482069346.cidr_blocks.#": "1",
                            "egress.482069346.cidr_blocks.0": "0.0.0.0/0",
                            "egress.482069346.description": "",
                            "egress.482069346.from_port": "0",
                            "egress.482069346.ipv6_cidr_blocks.#": "0",
                            "egress.482069346.prefix_list_ids.#": "0",
                            "egress.482069346.protocol": "-1",
                            "egress.482069346.security_groups.#": "0",
                            "egress.482069346.self": "false",
                            "egress.482069346.to_port": "0",
                            "id": "sg-04a16b4c",
                            "ingress.#": "2",
                            "ingress.2214680975.cidr_blocks.#": "1",
                            "ingress.2214680975.cidr_blocks.0": "0.0.0.0/0",
                            "ingress.2214680975.description": "",
                            "ingress.2214680975.from_port": "80",
                            "ingress.2214680975.ipv6_cidr_blocks.#": "0",
                            "ingress.2214680975.protocol": "tcp",
                            "ingress.2214680975.security_groups.#": "0",
                            "ingress.2214680975.self": "false",
                            "ingress.2214680975.to_port": "80",
                            "ingress.3068409405.cidr_blocks.#": "1",
                            "ingress.3068409405.cidr_blocks.0": "0.0.0.0/0",
                            "ingress.3068409405.description": "",
                            "ingress.3068409405.from_port": "8",
                            "ingress.3068409405.ipv6_cidr_blocks.#": "0",
                            "ingress.3068409405.protocol": "icmp",
                            "ingress.3068409405.security_groups.#": "0",
                            "ingress.3068409405.self": "false",
                            "ingress.3068409405.to_port": "0",
                            "name": "production-web-inbound-sg",
                            "owner_id": "951653432607",
                            "revoke_rules_on_delete": "false",
                            "tags.%": "1",
                            "tags.Name": "production-web-inbound-sg",
                            "vpc_id": "vpc-f1fada8a"
                        },
                        "meta": {
                            "e2bfb730-ecaa-11e6-8f88-34363bc7c4c0": {
                                "create": 600000000000,
                                "delete": 600000000000
                            },
                            "schema_version": "1"
                        },
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.aws"
                },
                "data.aws_ecs_task_definition.frontend": {
                    "type": "aws_ecs_task_definition",
                    "depends_on": [
                        "aws_ecs_task_definition.frontend"
                    ],
                    "primary": {
                        "id": "arn:aws:ecs:us-east-1:951653432607:task-definition/production_frontend:7",
                        "attributes": {
                            "family": "production_frontend",
                            "id": "arn:aws:ecs:us-east-1:951653432607:task-definition/production_frontend:7",
                            "network_mode": "awsvpc",
                            "revision": "7",
                            "status": "ACTIVE",
                            "task_definition": "production_frontend",
                            "task_role_arn": "arn:aws:iam::951653432607:role/ecs_task_execution_role"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.aws"
                },
                "data.aws_ecs_task_definition.server": {
                    "type": "aws_ecs_task_definition",
                    "depends_on": [
                        "aws_ecs_task_definition.server"
                    ],
                    "primary": {
                        "id": "arn:aws:ecs:us-east-1:951653432607:task-definition/production_server:7",
                        "attributes": {
                            "family": "production_server",
                            "id": "arn:aws:ecs:us-east-1:951653432607:task-definition/production_server:7",
                            "network_mode": "awsvpc",
                            "revision": "7",
                            "status": "ACTIVE",
                            "task_definition": "production_server",
                            "task_role_arn": "arn:aws:iam::951653432607:role/ecs_task_execution_role"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.aws"
                },
                "data.aws_iam_policy_document.ecs_service_policy": {
                    "type": "aws_iam_policy_document",
                    "depends_on": [],
                    "primary": {
                        "id": "3615693260",
                        "attributes": {
                            "id": "3615693260",
                            "json": "{\n  \"Version\": \"2012-10-17\",\n  \"Statement\": [\n    {\n      \"Sid\": \"\",\n      \"Effect\": \"Allow\",\n      \"Action\": [\n        \"elasticloadbalancing:RegisterInstancesWithLoadBalancer\",\n        \"elasticloadbalancing:Describe*\",\n        \"elasticloadbalancing:DeregisterInstancesFromLoadBalancer\",\n        \"ec2:Describe*\",\n        \"ec2:AuthorizeSecurityGroupIngress\"\n      ],\n      \"Resource\": \"*\"\n    }\n  ]\n}",
                            "statement.#": "1",
                            "statement.0.actions.#": "5",
                            "statement.0.actions.2459212947": "ec2:Describe*",
                            "statement.0.actions.2464853358": "ec2:AuthorizeSecurityGroupIngress",
                            "statement.0.actions.2706807274": "elasticloadbalancing:DeregisterInstancesFromLoadBalancer",
                            "statement.0.actions.2747799858": "elasticloadbalancing:Describe*",
                            "statement.0.actions.982461153": "elasticloadbalancing:RegisterInstancesWithLoadBalancer",
                            "statement.0.condition.#": "0",
                            "statement.0.effect": "Allow",
                            "statement.0.not_actions.#": "0",
                            "statement.0.not_principals.#": "0",
                            "statement.0.not_resources.#": "0",
                            "statement.0.principals.#": "0",
                            "statement.0.resources.#": "1",
                            "statement.0.resources.2679715827": "*",
                            "statement.0.sid": ""
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.aws"
                },
                "data.aws_iam_policy_document.ecs_service_role": {
                    "type": "aws_iam_policy_document",
                    "depends_on": [],
                    "primary": {
                        "id": "3622649364",
                        "attributes": {
                            "id": "3622649364",
                            "json": "{\n  \"Version\": \"2012-10-17\",\n  \"Statement\": [\n    {\n      \"Sid\": \"\",\n      \"Effect\": \"Allow\",\n      \"Action\": \"sts:AssumeRole\",\n      \"Principal\": {\n        \"Service\": \"ecs.amazonaws.com\"\n      }\n    }\n  ]\n}",
                            "statement.#": "1",
                            "statement.0.actions.#": "1",
                            "statement.0.actions.2528466339": "sts:AssumeRole",
                            "statement.0.condition.#": "0",
                            "statement.0.effect": "Allow",
                            "statement.0.not_actions.#": "0",
                            "statement.0.not_principals.#": "0",
                            "statement.0.not_resources.#": "0",
                            "statement.0.principals.#": "1",
                            "statement.0.principals.1113412664.identifiers.#": "1",
                            "statement.0.principals.1113412664.identifiers.1509832800": "ecs.amazonaws.com",
                            "statement.0.principals.1113412664.type": "Service",
                            "statement.0.resources.#": "0",
                            "statement.0.sid": ""
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.aws"
                },
                "data.template_file.frontend_task": {
                    "type": "template_file",
                    "depends_on": [
                        "aws_cloudwatch_log_group.polyledger",
                        "aws_ecr_repository.polyledger_app"
                    ],
                    "primary": {
                        "id": "1579cdceec455f0552a35f1e7924a1a5b0b7c0eceb8099aaa0749b023f32877c",
                        "attributes": {
                            "id": "1579cdceec455f0552a35f1e7924a1a5b0b7c0eceb8099aaa0749b023f32877c",
                            "rendered": "[\n  {\n    \"name\": \"frontend\",\n    \"image\": \"951653432607.dkr.ecr.us-east-1.amazonaws.com/polyledger/production/client\",\n    \"portMappings\": [\n      {\n        \"containerPort\": 80,\n        \"hostPort\": 80\n      }\n    ],\n    \"memory\": 300,\n    \"networkMode\": \"awsvpc\",\n    \"logConfiguration\": {\n      \"logDriver\": \"awslogs\",\n      \"options\": {\n        \"awslogs-group\": \"polyledger\",\n        \"awslogs-region\": \"us-east-1\",\n        \"awslogs-stream-prefix\": \"frontend\"\n      }\n    },\n    \"environment\": [\n      {\n        \"name\": \"NPM_TOKEN\",\n        \"value\": \"6047c597-157d-4a45-b2bb-a76bc4405c95\"\n      }\n    ]\n  }\n]\n",
                            "template": "[\n  {\n    \"name\": \"frontend\",\n    \"image\": \"${image}\",\n    \"portMappings\": [\n      {\n        \"containerPort\": 80,\n        \"hostPort\": 80\n      }\n    ],\n    \"memory\": 300,\n    \"networkMode\": \"awsvpc\",\n    \"logConfiguration\": {\n      \"logDriver\": \"awslogs\",\n      \"options\": {\n        \"awslogs-group\": \"${log_group}\",\n        \"awslogs-region\": \"us-east-1\",\n        \"awslogs-stream-prefix\": \"frontend\"\n      }\n    },\n    \"environment\": [\n      {\n        \"name\": \"NPM_TOKEN\",\n        \"value\": \"${npm_token}\"\n      }\n    ]\n  }\n]\n",
                            "vars.%": "3",
                            "vars.image": "951653432607.dkr.ecr.us-east-1.amazonaws.com/polyledger/production/client",
                            "vars.log_group": "polyledger",
                            "vars.npm_token": "6047c597-157d-4a45-b2bb-a76bc4405c95"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.template"
                },
                "data.template_file.server_task": {
                    "type": "template_file",
                    "depends_on": [
                        "aws_cloudwatch_log_group.polyledger",
                        "aws_ecr_repository.polyledger_app"
                    ],
                    "primary": {
                        "id": "d1c106d164ac12325404d2742aa97fa9e89e696279ff202041178daf53f999a9",
                        "attributes": {
                            "id": "d1c106d164ac12325404d2742aa97fa9e89e696279ff202041178daf53f999a9",
                            "rendered": "[\n  {\n    \"name\": \"server\",\n    \"image\": \"951653432607.dkr.ecr.us-east-1.amazonaws.com/polyledger/production\",\n    \"portMappings\": [\n      {\n        \"containerPort\": 8000,\n        \"hostPort\": 8000\n      }\n    ],\n    \"memory\": 300,\n    \"networkMode\": \"awsvpc\",\n    \"logConfiguration\": {\n      \"logDriver\": \"awslogs\",\n      \"options\": {\n        \"awslogs-group\": \"polyledger\",\n        \"awslogs-region\": \"us-east-1\",\n        \"awslogs-stream-prefix\": \"server\"\n      }\n    },\n    \"command\": [\"start.sh\"],\n    \"environment\": [\n      {\n        \"name\": \"PORT\",\n        \"value\": \"80\"\n      },\n      {\n        \"name\": \"SECRET_KEY\",\n        \"value\": \"4!!ro=bp9po_v^^n^*i!aftl43tv78e#@at0xfdm191m@r3b4j\"\n      },\n      {\n        \"name\": \"DJANGO_SETTINGS_MODULE\",\n        \"value\": \"polyledger.settings.production\"\n      },\n      {\n        \"name\": \"EMAIL_HOST_PASSWORD\",\n        \"value\": \"29f391e0c4a33e2c02c5455f47657c76\"\n      },\n      {\n        \"name\": \"NPM_TOKEN\",\n        \"value\": \"6047c597-157d-4a45-b2bb-a76bc4405c95\"\n      },\n      {\n        \"name\": \"BITBUTTER_BASE_URI\",\n        \"value\": \"https://app-8697.on-aptible.com\"\n      },\n      {\n        \"name\": \"BITBUTTER_API_KEY\",\n        \"value\": \"1DhNsDorooYEfNu1hLLRy9qdMqfjn3B2Zc\"\n      },\n      {\n        \"name\": \"BITBUTTER_API_SECRET\",\n        \"value\": \"L55ECdCoYdv7PFrrd5nhWqxbnmDsPgR2G5vc8ywwSC6Rio2TiHpK\"\n      },\n      {\n        \"name\": \"BITBUTTER_PARTNERSHIP_ID\",\n        \"value\": \"a91baa13-d7c8-430a-b96f-c5670ac4898d\"\n      },\n      {\n        \"name\": \"BITBUTTER_PARTNER_ID\",\n        \"value\": \"cb0351ed-2c9f-42c6-95e7-175e4c70807f\"\n      }\n    ]\n  }\n]\n",
                            "template": "[\n  {\n    \"name\": \"server\",\n    \"image\": \"${image}\",\n    \"portMappings\": [\n      {\n        \"containerPort\": 8000,\n        \"hostPort\": 8000\n      }\n    ],\n    \"memory\": 300,\n    \"networkMode\": \"awsvpc\",\n    \"logConfiguration\": {\n      \"logDriver\": \"awslogs\",\n      \"options\": {\n        \"awslogs-group\": \"${log_group}\",\n        \"awslogs-region\": \"us-east-1\",\n        \"awslogs-stream-prefix\": \"server\"\n      }\n    },\n    \"command\": [\"start.sh\"],\n    \"environment\": [\n      {\n        \"name\": \"PORT\",\n        \"value\": \"80\"\n      },\n      {\n        \"name\": \"SECRET_KEY\",\n        \"value\": \"${secret_key_base}\"\n      },\n      {\n        \"name\": \"DJANGO_SETTINGS_MODULE\",\n        \"value\": \"polyledger.settings.production\"\n      },\n      {\n        \"name\": \"EMAIL_HOST_PASSWORD\",\n        \"value\": \"${email_host_password}\"\n      },\n      {\n        \"name\": \"NPM_TOKEN\",\n        \"value\": \"${npm_token}\"\n      },\n      {\n        \"name\": \"BITBUTTER_BASE_URI\",\n        \"value\": \"https://app-8697.on-aptible.com\"\n      },\n      {\n        \"name\": \"BITBUTTER_API_KEY\",\n        \"value\": \"${bitbutter_api_key}\"\n      },\n      {\n        \"name\": \"BITBUTTER_API_SECRET\",\n        \"value\": \"${bitbutter_api_secret}\"\n      },\n      {\n        \"name\": \"BITBUTTER_PARTNERSHIP_ID\",\n        \"value\": \"${bitbutter_partnership_id}\"\n      },\n      {\n        \"name\": \"BITBUTTER_PARTNER_ID\",\n        \"value\": \"${bitbutter_partner_id}\"\n      }\n    ]\n  }\n]\n",
                            "vars.%": "9",
                            "vars.bitbutter_api_key": "1DhNsDorooYEfNu1hLLRy9qdMqfjn3B2Zc",
                            "vars.bitbutter_api_secret": "L55ECdCoYdv7PFrrd5nhWqxbnmDsPgR2G5vc8ywwSC6Rio2TiHpK",
                            "vars.bitbutter_partner_id": "cb0351ed-2c9f-42c6-95e7-175e4c70807f",
                            "vars.bitbutter_partnership_id": "a91baa13-d7c8-430a-b96f-c5670ac4898d",
                            "vars.email_host_password": "29f391e0c4a33e2c02c5455f47657c76",
                            "vars.image": "951653432607.dkr.ecr.us-east-1.amazonaws.com/polyledger/production",
                            "vars.log_group": "polyledger",
                            "vars.npm_token": "6047c597-157d-4a45-b2bb-a76bc4405c95",
                            "vars.secret_key_base": "4!!ro=bp9po_v^^n^*i!aftl43tv78e#@at0xfdm191m@r3b4j"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.template"
                },
                "random_id.target_group_sufix": {
                    "type": "random_id",
                    "depends_on": [],
                    "primary": {
                        "id": "VIg",
                        "attributes": {
                            "b64": "VIg",
                            "b64_std": "VIg=",
                            "b64_url": "VIg",
                            "byte_length": "2",
                            "dec": "21640",
                            "hex": "5488",
                            "id": "VIg"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.random"
                }
            },
            "depends_on": []
        },
        {
            "path": [
                "root",
                "networking"
            ],
            "outputs": {
                "default_sg_id": {
                    "sensitive": false,
                    "type": "string",
                    "value": "sg-f6b872be"
                },
                "private_subnets_id": {
                    "sensitive": false,
                    "type": "list",
                    "value": [
                        "subnet-2c9e594b",
                        "subnet-8f9b69a1"
                    ]
                },
                "public_subnets_id": {
                    "sensitive": false,
                    "type": "list",
                    "value": [
                        "subnet-508f4837",
                        "subnet-b3af5d9d"
                    ]
                },
                "security_groups_ids": {
                    "sensitive": false,
                    "type": "list",
                    "value": [
                        "sg-f6b872be"
                    ]
                },
                "vpc_id": {
                    "sensitive": false,
                    "type": "string",
                    "value": "vpc-f1fada8a"
                }
            },
            "resources": {
                "aws_eip.nat_eip": {
                    "type": "aws_eip",
                    "depends_on": [
                        "aws_internet_gateway.ig"
                    ],
                    "primary": {
                        "id": "eipalloc-75ad4f7d",
                        "attributes": {
                            "association_id": "",
                            "domain": "vpc",
                            "id": "eipalloc-75ad4f7d",
                            "instance": "",
                            "network_interface": "",
                            "private_ip": "",
                            "public_ip": "18.208.42.1",
                            "tags.%": "0",
                            "vpc": "true"
                        },
                        "meta": {
                            "e2bfb730-ecaa-11e6-8f88-34363bc7c4c0": {
                                "delete": 180000000000,
                                "read": 900000000000,
                                "update": 300000000000
                            }
                        },
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.aws"
                },
                "aws_internet_gateway.ig": {
                    "type": "aws_internet_gateway",
                    "depends_on": [
                        "aws_vpc.vpc"
                    ],
                    "primary": {
                        "id": "igw-045f2a7c",
                        "attributes": {
                            "id": "igw-045f2a7c",
                            "tags.%": "2",
                            "tags.Environment": "production",
                            "tags.Name": "production-igw",
                            "vpc_id": "vpc-f1fada8a"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.aws"
                },
                "aws_nat_gateway.nat": {
                    "type": "aws_nat_gateway",
                    "depends_on": [
                        "aws_eip.nat_eip",
                        "aws_internet_gateway.ig",
                        "aws_subnet.public_subnet.*"
                    ],
                    "primary": {
                        "id": "nat-075b0f44048b38767",
                        "attributes": {
                            "allocation_id": "eipalloc-75ad4f7d",
                            "id": "nat-075b0f44048b38767",
                            "network_interface_id": "eni-8b88d008",
                            "private_ip": "10.0.1.22",
                            "public_ip": "18.208.42.1",
                            "subnet_id": "subnet-508f4837",
                            "tags.%": "2",
                            "tags.Environment": "production",
                            "tags.Name": "production-us-east-1a-nat"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.aws"
                },
                "aws_route.private_nat_gateway": {
                    "type": "aws_route",
                    "depends_on": [
                        "aws_nat_gateway.nat",
                        "aws_route_table.private"
                    ],
                    "primary": {
                        "id": "r-rtb-5abfb5261080289494",
                        "attributes": {
                            "destination_cidr_block": "0.0.0.0/0",
                            "destination_prefix_list_id": "",
                            "egress_only_gateway_id": "",
                            "gateway_id": "",
                            "id": "r-rtb-5abfb5261080289494",
                            "instance_id": "",
                            "instance_owner_id": "",
                            "nat_gateway_id": "nat-075b0f44048b38767",
                            "network_interface_id": "",
                            "origin": "CreateRoute",
                            "route_table_id": "rtb-5abfb526",
                            "state": "active",
                            "vpc_peering_connection_id": ""
                        },
                        "meta": {
                            "e2bfb730-ecaa-11e6-8f88-34363bc7c4c0": {
                                "create": 120000000000,
                                "delete": 300000000000
                            }
                        },
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.aws"
                },
                "aws_route.public_internet_gateway": {
                    "type": "aws_route",
                    "depends_on": [
                        "aws_internet_gateway.ig",
                        "aws_route_table.public"
                    ],
                    "primary": {
                        "id": "r-rtb-0f5540731080289494",
                        "attributes": {
                            "destination_cidr_block": "0.0.0.0/0",
                            "destination_prefix_list_id": "",
                            "egress_only_gateway_id": "",
                            "gateway_id": "igw-045f2a7c",
                            "id": "r-rtb-0f5540731080289494",
                            "instance_id": "",
                            "instance_owner_id": "",
                            "nat_gateway_id": "",
                            "network_interface_id": "",
                            "origin": "CreateRoute",
                            "route_table_id": "rtb-0f554073",
                            "state": "active",
                            "vpc_peering_connection_id": ""
                        },
                        "meta": {
                            "e2bfb730-ecaa-11e6-8f88-34363bc7c4c0": {
                                "create": 120000000000,
                                "delete": 300000000000
                            }
                        },
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.aws"
                },
                "aws_route_table.private": {
                    "type": "aws_route_table",
                    "depends_on": [
                        "aws_vpc.vpc"
                    ],
                    "primary": {
                        "id": "rtb-5abfb526",
                        "attributes": {
                            "id": "rtb-5abfb526",
                            "propagating_vgws.#": "0",
                            "route.#": "0",
                            "tags.%": "2",
                            "tags.Environment": "production",
                            "tags.Name": "production-private-route-table",
                            "vpc_id": "vpc-f1fada8a"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.aws"
                },
                "aws_route_table.public": {
                    "type": "aws_route_table",
                    "depends_on": [
                        "aws_vpc.vpc"
                    ],
                    "primary": {
                        "id": "rtb-0f554073",
                        "attributes": {
                            "id": "rtb-0f554073",
                            "propagating_vgws.#": "0",
                            "route.#": "0",
                            "tags.%": "2",
                            "tags.Environment": "production",
                            "tags.Name": "production-public-route-table",
                            "vpc_id": "vpc-f1fada8a"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.aws"
                },
                "aws_route_table_association.private.0": {
                    "type": "aws_route_table_association",
                    "depends_on": [
                        "aws_route_table.private",
                        "aws_subnet.private_subnet.*"
                    ],
                    "primary": {
                        "id": "rtbassoc-fbceb384",
                        "attributes": {
                            "id": "rtbassoc-fbceb384",
                            "route_table_id": "rtb-5abfb526",
                            "subnet_id": "subnet-2c9e594b"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.aws"
                },
                "aws_route_table_association.private.1": {
                    "type": "aws_route_table_association",
                    "depends_on": [
                        "aws_route_table.private",
                        "aws_subnet.private_subnet.*"
                    ],
                    "primary": {
                        "id": "rtbassoc-c2cfb2bd",
                        "attributes": {
                            "id": "rtbassoc-c2cfb2bd",
                            "route_table_id": "rtb-5abfb526",
                            "subnet_id": "subnet-8f9b69a1"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.aws"
                },
                "aws_route_table_association.public.0": {
                    "type": "aws_route_table_association",
                    "depends_on": [
                        "aws_route_table.public",
                        "aws_subnet.public_subnet.*"
                    ],
                    "primary": {
                        "id": "rtbassoc-9bc8b5e4",
                        "attributes": {
                            "id": "rtbassoc-9bc8b5e4",
                            "route_table_id": "rtb-0f554073",
                            "subnet_id": "subnet-508f4837"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.aws"
                },
                "aws_route_table_association.public.1": {
                    "type": "aws_route_table_association",
                    "depends_on": [
                        "aws_route_table.public",
                        "aws_subnet.public_subnet.*"
                    ],
                    "primary": {
                        "id": "rtbassoc-73d4a90c",
                        "attributes": {
                            "id": "rtbassoc-73d4a90c",
                            "route_table_id": "rtb-0f554073",
                            "subnet_id": "subnet-b3af5d9d"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.aws"
                },
                "aws_security_group.default": {
                    "type": "aws_security_group",
                    "depends_on": [
                        "aws_vpc.vpc"
                    ],
                    "primary": {
                        "id": "sg-f6b872be",
                        "attributes": {
                            "arn": "arn:aws:ec2:us-east-1:951653432607:security-group/sg-f6b872be",
                            "description": "Default security group to allow inbound/outbound from the VPC",
                            "egress.#": "1",
                            "egress.753360330.cidr_blocks.#": "0",
                            "egress.753360330.description": "",
                            "egress.753360330.from_port": "0",
                            "egress.753360330.ipv6_cidr_blocks.#": "0",
                            "egress.753360330.prefix_list_ids.#": "0",
                            "egress.753360330.protocol": "-1",
                            "egress.753360330.security_groups.#": "0",
                            "egress.753360330.self": "true",
                            "egress.753360330.to_port": "0",
                            "id": "sg-f6b872be",
                            "ingress.#": "1",
                            "ingress.753360330.cidr_blocks.#": "0",
                            "ingress.753360330.description": "",
                            "ingress.753360330.from_port": "0",
                            "ingress.753360330.ipv6_cidr_blocks.#": "0",
                            "ingress.753360330.protocol": "-1",
                            "ingress.753360330.security_groups.#": "0",
                            "ingress.753360330.self": "true",
                            "ingress.753360330.to_port": "0",
                            "name": "production-default-sg",
                            "owner_id": "951653432607",
                            "revoke_rules_on_delete": "false",
                            "tags.%": "1",
                            "tags.Environment": "production",
                            "vpc_id": "vpc-f1fada8a"
                        },
                        "meta": {
                            "e2bfb730-ecaa-11e6-8f88-34363bc7c4c0": {
                                "create": 600000000000,
                                "delete": 600000000000
                            },
                            "schema_version": "1"
                        },
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.aws"
                },
                "aws_subnet.private_subnet.0": {
                    "type": "aws_subnet",
                    "depends_on": [
                        "aws_vpc.vpc"
                    ],
                    "primary": {
                        "id": "subnet-2c9e594b",
                        "attributes": {
                            "assign_ipv6_address_on_creation": "false",
                            "availability_zone": "us-east-1a",
                            "cidr_block": "10.0.10.0/24",
                            "id": "subnet-2c9e594b",
                            "map_public_ip_on_launch": "false",
                            "tags.%": "2",
                            "tags.Environment": "production",
                            "tags.Name": "production-us-east-1a-private-subnet",
                            "vpc_id": "vpc-f1fada8a"
                        },
                        "meta": {
                            "schema_version": "1"
                        },
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.aws"
                },
                "aws_subnet.private_subnet.1": {
                    "type": "aws_subnet",
                    "depends_on": [
                        "aws_vpc.vpc"
                    ],
                    "primary": {
                        "id": "subnet-8f9b69a1",
                        "attributes": {
                            "assign_ipv6_address_on_creation": "false",
                            "availability_zone": "us-east-1b",
                            "cidr_block": "10.0.20.0/24",
                            "id": "subnet-8f9b69a1",
                            "map_public_ip_on_launch": "false",
                            "tags.%": "2",
                            "tags.Environment": "production",
                            "tags.Name": "production-us-east-1b-private-subnet",
                            "vpc_id": "vpc-f1fada8a"
                        },
                        "meta": {
                            "schema_version": "1"
                        },
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.aws"
                },
                "aws_subnet.public_subnet.0": {
                    "type": "aws_subnet",
                    "depends_on": [
                        "aws_vpc.vpc"
                    ],
                    "primary": {
                        "id": "subnet-508f4837",
                        "attributes": {
                            "assign_ipv6_address_on_creation": "false",
                            "availability_zone": "us-east-1a",
                            "cidr_block": "10.0.1.0/24",
                            "id": "subnet-508f4837",
                            "map_public_ip_on_launch": "true",
                            "tags.%": "2",
                            "tags.Environment": "production",
                            "tags.Name": "production-us-east-1a-public-subnet",
                            "vpc_id": "vpc-f1fada8a"
                        },
                        "meta": {
                            "schema_version": "1"
                        },
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.aws"
                },
                "aws_subnet.public_subnet.1": {
                    "type": "aws_subnet",
                    "depends_on": [
                        "aws_vpc.vpc"
                    ],
                    "primary": {
                        "id": "subnet-b3af5d9d",
                        "attributes": {
                            "assign_ipv6_address_on_creation": "false",
                            "availability_zone": "us-east-1b",
                            "cidr_block": "10.0.2.0/24",
                            "id": "subnet-b3af5d9d",
                            "map_public_ip_on_launch": "true",
                            "tags.%": "2",
                            "tags.Environment": "production",
                            "tags.Name": "production-us-east-1b-public-subnet",
                            "vpc_id": "vpc-f1fada8a"
                        },
                        "meta": {
                            "schema_version": "1"
                        },
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.aws"
                },
                "aws_vpc.vpc": {
                    "type": "aws_vpc",
                    "depends_on": [],
                    "primary": {
                        "id": "vpc-f1fada8a",
                        "attributes": {
                            "assign_generated_ipv6_cidr_block": "false",
                            "cidr_block": "10.0.0.0/16",
                            "default_network_acl_id": "acl-35ea6c4f",
                            "default_route_table_id": "rtb-0c574270",
                            "default_security_group_id": "sg-14b07a5c",
                            "dhcp_options_id": "dopt-5ece3f3b",
                            "enable_classiclink": "false",
                            "enable_classiclink_dns_support": "false",
                            "enable_dns_hostnames": "true",
                            "enable_dns_support": "true",
                            "id": "vpc-f1fada8a",
                            "instance_tenancy": "default",
                            "main_route_table_id": "rtb-0c574270",
                            "tags.%": "2",
                            "tags.Environment": "production",
                            "tags.Name": "production-vpc"
                        },
                        "meta": {
                            "schema_version": "1"
                        },
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.aws"
                }
            },
            "depends_on": []
        }
    ]
}
